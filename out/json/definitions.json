{
  "label": "EXAMPLE",
  "type": "EXAMPLE",
  "children": [
    {
      "label": "Namespaces",
      "type": "Namespaces",
      "children": [
        {
          "label": "poplin.ps",
          "type": "Namespace",
          "description": "A provider screening application for a healthcare organization or provider.",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "type": "DataElement",
              "label": "EFTAccepted",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Indicates whether the provider organization accepts Electronic Funds Transfer (EFT)",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:boolean",
                "identifier": {
                  "label": "boolean",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ElectronicClaimsAccepted",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Indicates whether the provider organization accepts Electronic Claims",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:boolean",
                "identifier": {
                  "label": "boolean",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Intent",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Indicates the level of actionability associated with the Task. I.e. Is this a proposed task, a planned task, an actionable task, etc.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "OrganizationApplication",
              "isEntry": true,
              "isAbstract": false,
              "concepts": [],
              "description": "TODO",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "poplin.ps:Intent",
                  "identifier": {
                    "label": "Intent",
                    "type": "Identifier",
                    "namespace": "poplin.ps"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "poplin.ps:PoplinCode",
                  "identifier": {
                    "label": "PoplinCode",
                    "type": "Identifier",
                    "namespace": "poplin.ps"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "poplin.ps:EFTAccepted",
                  "identifier": {
                    "label": "EFTAccepted",
                    "type": "Identifier",
                    "namespace": "poplin.ps"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "poplin.ps:ElectronicClaimsAccepted",
                  "identifier": {
                    "label": "ElectronicClaimsAccepted",
                    "type": "Identifier",
                    "namespace": "poplin.ps"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "PoplinCode",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A code that briefly describes the activity",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "unknown:ps",
                  "identifier": {
                    "label": "ps",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "unknown:pplication",
                  "identifier": {
                    "label": "pplication",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "unknown:rganization",
                  "identifier": {
                    "label": "rganization",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                }
              ]
            }
          ]
        },
        {
          "label": "shr.base",
          "type": "Namespace",
          "description": "The SHR Base domain contains definitions for basic classes in SHR, including the base Entry and Any. The classes below Any are are Finding, Action, and Entity.",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "type": "DataElement",
              "label": "Any",
              "isEntry": false,
              "isAbstract": true,
              "concepts": [],
              "description": "The top level class in the hierarchy",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Attribution",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Who the entry is attributed to, for example, the informer (information source), the recorder, the verifier, the responsible person, etc.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "RefValue",
                  "label": "reference to unknown:Role",
                  "identifier": {
                    "label": "Role",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "unknown:ParticipationType",
                  "identifier": {
                    "label": "ParticipationType",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Author",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The person or organization who created the entry and is responsible for (and may certify) the content.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:string",
                    "identifier": {
                      "label": "string",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Patient",
                    "identifier": {
                      "label": "Patient",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Group",
                    "identifier": {
                      "label": "Group",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Device",
                    "identifier": {
                      "label": "Device",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Participant",
                    "identifier": {
                      "label": "Participant",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:RelatedPerson",
                    "identifier": {
                      "label": "RelatedPerson",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Organization",
                    "identifier": {
                      "label": "Organization",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Content",
              "isEntry": false,
              "isAbstract": true,
              "concepts": [],
              "description": "An item that can constitute the payload of an Entry, aka an EntryElement.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Any",
                  "type": "Identifier",
                  "namespace": "shr.base"
                }
              ],
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:RelatedEncounter",
                  "identifier": {
                    "label": "RelatedEncounter",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Author",
                  "identifier": {
                    "label": "Author",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Informant",
                  "identifier": {
                    "label": "Informant",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Entry",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1705654",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1705654",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1705654;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Metadata attributes that apply to any item represented in the standard health record. An Entry may not belong exclusively to a single person's health record, but could represent an entity that surfaces in multiple records, such as organizations or practitioners. If the entry belongs to a single person's record, then the identity of the person of record must be recorded.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Any",
                  "type": "Identifier",
                  "namespace": "shr.base"
                }
              ],
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:ShrId",
                  "identifier": {
                    "label": "ShrId",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:EntryId",
                  "identifier": {
                    "label": "EntryId",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:PersonOfRecord",
                  "identifier": {
                    "label": "PersonOfRecord",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Version",
                  "identifier": {
                    "label": "Version",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:EntryType",
                  "identifier": {
                    "label": "EntryType",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CreationTime",
                  "identifier": {
                    "label": "CreationTime",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:LastUpdated",
                  "identifier": {
                    "label": "LastUpdated",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Narrative",
                  "identifier": {
                    "label": "Narrative",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Language",
                  "identifier": {
                    "label": "Language",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:SecurityLabel",
                  "identifier": {
                    "label": "SecurityLabel",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Tag",
                  "identifier": {
                    "label": "Tag",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "EntryId",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0600091",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0600091",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0600091;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A persistent, permanent identifier for an entry in a health record, unique within the scope of the health record.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:id",
                "identifier": {
                  "label": "id",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "EntryType",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "SHR data element identifier, as a URI.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:uri",
                "identifier": {
                  "label": "uri",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Informant",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0449416",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0449416",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0449416;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The person or entity that provided the information in the entry, as distinct from who created the entry, e.g. the subject (patient), medical professional, family member, device or software program.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:string",
                    "identifier": {
                      "label": "string",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Patient",
                    "identifier": {
                      "label": "Patient",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Group",
                    "identifier": {
                      "label": "Group",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Device",
                    "identifier": {
                      "label": "Device",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Participant",
                    "identifier": {
                      "label": "Participant",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:RelatedPerson",
                    "identifier": {
                      "label": "RelatedPerson",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Organization",
                    "identifier": {
                      "label": "Organization",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Language",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0023008",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0023008",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0023008;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A human language, spoken or written.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://hl7.org/fhir/ValueSet/languages",
                    "bindingStrength": "EXTENSIBLE",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "LastUpdated",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The most recent date the entry was changed.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:instant",
                "identifier": {
                  "label": "instant",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Narrative",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A human-readable narrative, potentially including images, that contains a summary of the resource, and may be used to represent the content of the resource to a human.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:xhtml",
                "identifier": {
                  "label": "xhtml",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:NarrativeQualifier",
                  "identifier": {
                    "label": "NarrativeQualifier",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "NarrativeQualifier",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Additional information on how the narrative was generated, and the scope of information contained.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://hl7.org/fhir/ValueSet/narrative-status",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "PersonOfRecord",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The person this record belongs to.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "RefValue",
                "label": "reference to unknown:Patient",
                "identifier": {
                  "label": "Patient",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "RelatedEncounter",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "If content was generated during a patient encounter, related encounter is the encounter where the information was gained.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "RefValue",
                "label": "reference to unknown:EncounterPerformed",
                "identifier": {
                  "label": "EncounterPerformed",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "SecurityLabel",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A code that connects the entry to a security policy. Security labels can be updated when the resource changes, or whenever the security sub-system chooses to.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Coding",
                "identifier": {
                  "label": "Coding",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ShrId",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A unique, persistent, permanent identifier for the overall health record belonging to the PersonOfRecord.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:id",
                "identifier": {
                  "label": "id",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Subject",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The person or thing that this entry relates to, usually the Person of Record. However, not all entries have health information specifically about the patient, but in different contexts, could refer to a fetus, family member (living or dead), device, location, organization, finding, condition, or intervention.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Patient",
                    "identifier": {
                      "label": "Patient",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Group",
                    "identifier": {
                      "label": "Group",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Device",
                    "identifier": {
                      "label": "Device",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to shr.core:Location",
                    "identifier": {
                      "label": "Location",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:RelatedPerson",
                    "identifier": {
                      "label": "RelatedPerson",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Organization",
                    "identifier": {
                      "label": "Organization",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Tag",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A code used to relate entries to categories or workflows. Applications are not required to consider the tags when interpreting the meaning of an entry.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Coding",
                "identifier": {
                  "label": "Coding",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            }
          ]
        },
        {
          "label": "shr.core",
          "type": "Namespace",
          "description": "The SHR Core domain contains definitions for a variety of general-purpose elements that are used widely in SHR. These include definitions for coding, expressions of time, quantities, addresses, names, and more.",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "type": "DataElement",
              "label": "Address",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0682130",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0682130",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0682130;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats). This data type may be used to convey addresses for use in delivering mail as well as for visiting locations and which might not be valid for mail delivery. There are a variety of postal address formats defined around the world. (Source: HL7 FHIR).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/address-use",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "unknown:Purpose",
                  "identifier": {
                    "label": "Purpose",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/address-type",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "unknown:Type",
                  "identifier": {
                    "label": "Type",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:DisplayText",
                  "identifier": {
                    "label": "DisplayText",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 2,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:AddressLine",
                  "identifier": {
                    "label": "AddressLine",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:City",
                  "identifier": {
                    "label": "City",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:District",
                  "identifier": {
                    "label": "District",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:State",
                  "identifier": {
                    "label": "State",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:PostalCode",
                  "identifier": {
                    "label": "PostalCode",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Country",
                  "identifier": {
                    "label": "Country",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:EffectiveTimePeriod",
                  "identifier": {
                    "label": "EffectiveTimePeriod",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "AddressLine",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Part of an address that contains the house number, apartment number, street name, street direction, P.O. Box number, delivery hints, and similar address information. (Source: HL7 FHIR).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Age",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0001779",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0001779",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0001779;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "How long something has existed in time.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/units-of-time",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Units",
                  "identifier": {
                    "label": "Units",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "AgeGroup",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0027362",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0027362",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0027362;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Subgroups of populations based on age.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "urn:tbd:AgeGroupVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "AgeRange",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A quantitative range of ages. One of the two ages must be specified.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "TypeConstraint",
                      "isA": {
                        "label": "Age",
                        "type": "Identifier",
                        "namespace": "shr.core"
                      },
                      "onValue": true,
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:UpperBound",
                  "identifier": {
                    "label": "UpperBound",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "TypeConstraint",
                      "isA": {
                        "label": "Age",
                        "type": "Identifier",
                        "namespace": "shr.core"
                      },
                      "onValue": true,
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:LowerBound",
                  "identifier": {
                    "label": "LowerBound",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Altitude",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0002349",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0002349",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0002349;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Height above sea level or above the earth's surface. Measured with with WGS84 datum.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Annotation",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "An added or follow-up note, often after the fact, that contains metadata about who made the statement and when.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Author",
                  "identifier": {
                    "label": "Author",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:OccurrenceTime",
                  "identifier": {
                    "label": "OccurrenceTime",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Area",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0205146",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0205146",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0205146;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The extent of a 2-dimensional surface enclosed within a boundary.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "ObservationComponent",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "CodeConstraint",
                    "code": {
                      "label": "http://unitsofmeasure.org:TBD",
                      "type": "Concept",
                      "system": "http://unitsofmeasure.org",
                      "code": "TBD",
                      "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                    },
                    "path": "shr.core.Units:shr.core.Coding"
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Attachment",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A file that contains audio, video, image, or similar content.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "EmbeddedContent",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:BinaryData",
                  "identifier": {
                    "label": "BinaryData",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:ContentType",
                  "identifier": {
                    "label": "ContentType",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Language",
                  "identifier": {
                    "label": "Language",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:ResourceLocation",
                  "identifier": {
                    "label": "ResourceLocation",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:ResourceSize",
                  "identifier": {
                    "label": "ResourceSize",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Hash",
                  "identifier": {
                    "label": "Hash",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Title",
                  "identifier": {
                    "label": "Title",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CreationTime",
                  "identifier": {
                    "label": "CreationTime",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "BinaryData",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The data itself.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:base64Binary",
                "identifier": {
                  "label": "base64Binary",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "BodyPosition",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1262869",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1262869",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1262869;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The position or physical attitude of the body.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/BodyPositionVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Category",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A class or division of people or things having particular shared characteristics",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Certainty",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The degree of confidence in a conclusion or assertion.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/QualitativeValueScaleVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Circumference",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0332520",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0332520",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0332520;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The length of such a boundary line of a figure, area, or object.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "ObservationComponent",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "children": []
            },
            {
              "type": "DataElement",
              "label": "City",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1555315",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1555315",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1555315;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The name of a municipality, city, town, village or other community or delivery center. (Source: HL7 FHIR).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "GeopoliticalLocation",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ClockDirection",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://loinc.org:72294-2",
                  "type": "Concept",
                  "system": "http://loinc.org",
                  "code": "72294-2",
                  "url": "http://s.details.loinc.org/LOINC/72294-2.html"
                }
              ],
              "description": "A direction indicated by an angle relative to 12 o'clock.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "ObservationComponent",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/ClockDirectionVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "CodeableConcept",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A set of codes drawn from different coding systems, representing the same concept.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Coding",
                  "identifier": {
                    "label": "Coding",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:DisplayText",
                  "identifier": {
                    "label": "DisplayText",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "CodeSystem",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A formal terminology system.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:uri",
                "identifier": {
                  "label": "uri",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "CodeSystemVersion",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The version of the vocabulary being used, if applicable.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Coding",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0805701",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0805701",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0805701;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Coding of a concept, drawn from a controlled vocabulary. Includes the vocabulary and version, if applicable. May include a display text, and a descriptor expressing the intended interpretation of the code.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 0,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CodeSystem",
                  "identifier": {
                    "label": "CodeSystem",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CodeSystemVersion",
                  "identifier": {
                    "label": "CodeSystemVersion",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:DisplayText",
                  "identifier": {
                    "label": "DisplayText",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Comparator",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://hl7.org/fhir/ValueSet/quantity-comparator",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ContactDetail",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Describes an individual and how to reach them.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:HumanName",
                  "identifier": {
                    "label": "HumanName",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:ContactPoint",
                  "identifier": {
                    "label": "ContactPoint",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "ContactPoint",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C2986441",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C2986441",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C2986441;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "An electronic means of contacting an organization or individual.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:TelecomNumberOrAddress",
                  "identifier": {
                    "label": "TelecomNumberOrAddress",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/contact-point-system",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "unknown:Type",
                  "identifier": {
                    "label": "Type",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/contact-point-use",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "unknown:Purpose",
                  "identifier": {
                    "label": "Purpose",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Priority",
                  "identifier": {
                    "label": "Priority",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:EffectiveTimePeriod",
                  "identifier": {
                    "label": "EffectiveTimePeriod",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "ContentType",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Mime type of the content, with charset etc.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "CorrectionFactor",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A correction factor that is applied to the sampled data points before they are added to the origin.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Count",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0750480",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0750480",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0750480;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The number of items (0 or more), as an integer.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:unsignedInt",
                "identifier": {
                  "label": "unsignedInt",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "CountPerInterval",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "How many times the event should take place during one recurrence interval, for example, to specify 3-4 times per day, the CountPerInterval should be 3 to 4.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:MinCount",
                  "identifier": {
                    "label": "MinCount",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:MaxCount",
                  "identifier": {
                    "label": "MaxCount",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Country",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0454664",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0454664",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0454664;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Country - a nation as commonly understood or generally accepted, expressed in ISO 3166 Alpha-2 (2-letter) codes.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "GeopoliticalLocation",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "CreationTime",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C3669169",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C3669169",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C3669169;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The point in time when the information was recorded in the system of record.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:dateTime",
                "identifier": {
                  "label": "dateTime",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "DailyLifeEvent",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A quotidian landmark, such as rising, mealtime, or bedtime, when an event should take place.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://hl7.org/fhir/ValueSet/event-timing",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "DayOfWeek",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A day of the week that the pattern should take place.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://hl7.org/fhir/ValueSet/days-of-week",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "primitive:code",
                "identifier": {
                  "label": "code",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Definitional",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1704788",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1704788",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1704788;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "An indicator that the item is a description of a thing, not a thing that actually exists. For example, a group of people between ages 30 and 40 with Type II diabetes can be defined, without existing as a set of particular people.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:boolean",
                "identifier": {
                  "label": "boolean",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Denominator",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C2825218",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C2825218",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C2825218;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The divisor of a fraction.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Depth",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0205125",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0205125",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0205125;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The extent downward or inward; the perpendicular measurement from the surface downward to determine deepness.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "ObservationComponent",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "CodeConstraint",
                    "code": {
                      "label": "http://unitsofmeasure.org:TBD",
                      "type": "Concept",
                      "system": "http://unitsofmeasure.org",
                      "code": "TBD",
                      "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                    },
                    "path": "shr.core.Units:shr.core.Coding"
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Details",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0947611",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0947611",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0947611;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "An text note containing additional details, explanation, description, comment, or summarization. Details can discuss, support, explain changes to, or dispute information.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Dimensions",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:positiveInt",
                "identifier": {
                  "label": "positiveInt",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "DisplayText",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1548311",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1548311",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1548311;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A string meant for reading by a person, for example, accompanying a code.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Distance",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0012751",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0012751",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0012751;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The measure of space separating two objects or points.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://example.com/shr/core/vs/UnitsOfLengthVS",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Units",
                  "identifier": {
                    "label": "Units",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "District",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0079170",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0079170",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0079170;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The name of the administrative area at a level below that of a state but above that of a city or town. In the US, a county. Outside the US, a district or the equivalent. (Source: HL7 FHIR).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "GeopoliticalLocation",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Duration",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0449238",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0449238",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0449238;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The length of time that something continues.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://example.com/shr/core/vs/TimeUnitOfMeasureVS",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Units",
                  "identifier": {
                    "label": "Units",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "DurationRange",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A range of durations.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "TypeConstraint",
                      "isA": {
                        "label": "Duration",
                        "type": "Identifier",
                        "namespace": "shr.core"
                      },
                      "onValue": true,
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:LowerBound",
                  "identifier": {
                    "label": "LowerBound",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "TypeConstraint",
                      "isA": {
                        "label": "Duration",
                        "type": "Identifier",
                        "namespace": "shr.core"
                      },
                      "onValue": true,
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:UpperBound",
                  "identifier": {
                    "label": "UpperBound",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "EffectiveDate",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1301880",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1301880",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1301880;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The date when something is to take effect.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:date",
                "identifier": {
                  "label": "date",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "EffectiveTimePeriod",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C2985763",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C2985763",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C2985763;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The date and time span for which something is active, valid, or in force.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "TimePeriod",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": []
            },
            {
              "type": "DataElement",
              "label": "EmbeddedContent",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Abstract class defining the common metadata of all types of encapsulated data, such as images.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "EventDuration",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The length of the recurring event.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:DurationRange",
                "identifier": {
                  "label": "DurationRange",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "FamilyName",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://loinc.org:45394-4",
                  "type": "Concept",
                  "system": "http://loinc.org",
                  "code": "45394-4",
                  "url": "http://s.details.loinc.org/LOINC/45394-4.html"
                }
              ],
              "description": "The portion of a person's name that reflects the genealogy of the person. In western cultures, this is the 'last' name. In eastern cultures, the family name appears before the person's given name(s). In some cultures (e.g. Eritrea) the family name of a son is the first name of his father. (Source: HL7 V3).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Formalism",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The system of formal syntax or interpretation associated with parsable content.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Frequency",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0376249",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0376249",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0376249;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "How many occurrences of an event per unit of time.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Ratio",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "constraints": [
                    {
                      "type": "CodeConstraint",
                      "code": {
                        "label": "http://unitsofmeasure.org:1",
                        "type": "Concept",
                        "system": "http://unitsofmeasure.org",
                        "code": "1",
                        "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                      },
                      "path": "shr.core.Quantity:shr.core.Units:shr.core.Coding"
                    }
                  ],
                  "type": "Incomplete",
                  "label": "shr.core:Numerator",
                  "identifier": {
                    "label": "Numerator",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/units-of-time",
                      "bindingStrength": "REQUIRED",
                      "path": "shr.core.Quantity:shr.core.Units"
                    }
                  ],
                  "type": "Incomplete",
                  "label": "shr.core:Denominator",
                  "identifier": {
                    "label": "Denominator",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "GeneralizedAge",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Qualitative or quantitative, exact or inexact description of age.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Age",
                    "identifier": {
                      "label": "Age",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:AgeRange",
                    "identifier": {
                      "label": "AgeRange",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:AgeGroup",
                    "identifier": {
                      "label": "AgeGroup",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GeneralizedDateTime",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A point in time, specified qualitatively or quantitatively.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:dateTime",
                    "identifier": {
                      "label": "dateTime",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:TimePeriod",
                    "identifier": {
                      "label": "TimePeriod",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:QualitativeDateTime",
                    "identifier": {
                      "label": "QualitativeDateTime",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GeneralizedDuration",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The duration of an event, qualitatively or quantitatively.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Duration",
                    "identifier": {
                      "label": "Duration",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:SemiquantDuration",
                    "identifier": {
                      "label": "SemiquantDuration",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GeneralizedFrequency",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The frequency of an event, qualitatively or quantitatively.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Frequency",
                    "identifier": {
                      "label": "Frequency",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:SemiquantFrequency",
                    "identifier": {
                      "label": "SemiquantFrequency",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:QualitativeFrequency",
                    "identifier": {
                      "label": "QualitativeFrequency",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GeneralizedLikelihood",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Quantitative or qualitative measure of likelihood.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Likelihood",
                    "identifier": {
                      "label": "Likelihood",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:QualitativeLikelihood",
                    "identifier": {
                      "label": "QualitativeLikelihood",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GeneralizedTemporalContext",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A generalized indicator of a dateTime or an age when an event happened.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:GeneralizedDateTime",
                    "identifier": {
                      "label": "GeneralizedDateTime",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:GeneralizedAge",
                    "identifier": {
                      "label": "GeneralizedAge",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:GestationalTemporalContext",
                    "identifier": {
                      "label": "GestationalTemporalContext",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GeopoliticalLocation",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0017446",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0017446",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0017446;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The countries of the world and major geopolitical subregions, such as US states.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Geoposition",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The location on the surface of the Earth, described by a latitude and longitude (and optional altitude).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Latitude",
                  "identifier": {
                    "label": "Latitude",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Longitude",
                  "identifier": {
                    "label": "Longitude",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Altitude",
                  "identifier": {
                    "label": "Altitude",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "GestationalAge",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0017504",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0017504",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0017504;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The age of the embryo or fetus. This may be assessed by medical history, physical examination, early immunologic pregnancy tests, radiography, ultrasonography, and amniotic fluid analysis.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Age",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GestationalTemporalContext",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A named gestational time period, or a gestational age.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:GestationalAge",
                    "identifier": {
                      "label": "GestationalAge",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:GestationalTimePeriod",
                    "identifier": {
                      "label": "GestationalTimePeriod",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GestationalTimePeriod",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A time relative to a pregnancy or childbirth event.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "urn:tbd:GestationalTimePeriodVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "GivenName",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://loinc.org:45392-8",
                  "type": "Concept",
                  "system": "http://loinc.org",
                  "code": "45392-8",
                  "url": "http://s.details.loinc.org/LOINC/45392-8.html"
                },
                {
                  "label": "http://snomed.info/sct:408677003",
                  "type": "Concept",
                  "system": "http://snomed.info/sct",
                  "code": "408677003",
                  "url": "https://uts.nlm.nih.gov/snomedctBrowser.html?conceptId=408677003"
                }
              ],
              "description": "A set of names given to a person at birth, but not including the family name. In western cultures, this property would contain the 'first' and 'middle' names. Note that in some cultures, the given name is placed after the family name. Also note this property contains multiple elements, so it can handle those situations where a person has more than one 'middle' name. (Source: HL7 V3).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Hash",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A hash code of the data (sha-1, base64ed)",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:base64Binary",
                "identifier": {
                  "label": "base64Binary",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "HumanName",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1547383",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1547383",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1547383;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A name used by a human being, written as it would be typically expressed. May include a breakdown of the various elements of the name (family name, given name, etc.).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:HumanNamePrefix",
                  "identifier": {
                    "label": "HumanNamePrefix",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:GivenName",
                  "identifier": {
                    "label": "GivenName",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:FamilyName",
                  "identifier": {
                    "label": "FamilyName",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:HumanNameSuffix",
                  "identifier": {
                    "label": "HumanNameSuffix",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/name-use",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "unknown:Purpose",
                  "identifier": {
                    "label": "Purpose",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:EffectiveTimePeriod",
                  "identifier": {
                    "label": "EffectiveTimePeriod",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "HumanNamePrefix",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C3476361",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C3476361",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C3476361;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Contains a set of honorific terms that typically appear before a person's name, for example Mr., Mrs., Dr., etc. Prefixes have a strong association to the immediately following name part. (Source: HL7 V3).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "HumanNameSuffix",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://loinc.org:45395-1",
                  "type": "Concept",
                  "system": "http://loinc.org",
                  "code": "45395-1",
                  "url": "http://s.details.loinc.org/LOINC/45395-1.html"
                },
                {
                  "label": "http://snomed.info/sct:715196001",
                  "type": "Concept",
                  "system": "http://snomed.info/sct",
                  "code": "715196001",
                  "url": "https://uts.nlm.nih.gov/snomedctBrowser.html?conceptId=715196001"
                }
              ],
              "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Identifier",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0600091",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0600091",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0600091;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A unique string that identifies a specific person or thing.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/identifier-use",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "unknown:Purpose",
                  "identifier": {
                    "label": "Purpose",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/identifier-type",
                      "bindingStrength": "EXTENSIBLE",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "unknown:Type",
                  "identifier": {
                    "label": "Type",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CodeSystem",
                  "identifier": {
                    "label": "CodeSystem",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:EffectiveTimePeriod",
                  "identifier": {
                    "label": "EffectiveTimePeriod",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "unknown:Issuer",
                  "identifier": {
                    "label": "Issuer",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "IntegerQuantity",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A Quantity that is an integer.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "constraints": [
                    {
                      "type": "CodeConstraint",
                      "code": {
                        "label": "http://unitsofmeasure.org:1",
                        "type": "Concept",
                        "system": "http://unitsofmeasure.org",
                        "code": "1",
                        "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                      },
                      "path": "shr.core.Coding"
                    }
                  ],
                  "type": "Incomplete",
                  "label": "shr.core:Units",
                  "identifier": {
                    "label": "Units",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Latitude",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1627936",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1627936",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1627936;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The angular distance north or south between an imaginary line around a heavenly body parallel to its equator and the equator itself. Measured with with WGS84 datum.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Length",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1444754",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1444754",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1444754;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The measurement or linear extent of something from end to end; the greatest dimensions of a body.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "ObservationComponent",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "CodeConstraint",
                    "code": {
                      "label": "http://unitsofmeasure.org:TBD",
                      "type": "Concept",
                      "system": "http://unitsofmeasure.org",
                      "code": "TBD",
                      "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                    },
                    "path": "shr.core.Units:shr.core.Coding"
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "LifeEventOffset",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A time in minutes before or after a given life event, for example, 30 minutes before a meal. Whether this means before or after is carried by the life event code.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:unsignedInt",
                "identifier": {
                  "label": "unsignedInt",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Likelihood",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0033204",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0033204",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0033204;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A measure of the expectation of the occurrence of a particular event, as a percentage.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:positiveInt",
                "identifier": {
                  "label": "positiveInt",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Location",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0450429",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0450429",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0450429;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A position, site, or point in space where something can be found.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Entity",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Address",
                    "identifier": {
                      "label": "Address",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Geoposition",
                    "identifier": {
                      "label": "Geoposition",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:GeopoliticalLocation",
                    "identifier": {
                      "label": "GeopoliticalLocation",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Longitude",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1657623",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1657623",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1657623;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "An imaginary great circle on the surface of a heavenly body passing through the poles at right angles to the equator. Measured with with WGS84 datum.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "LowerBound",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The lower limit on a range",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "LowerLimit",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value 'L' (lower than detection limit).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "MaxCount",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Upper bound on a count.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:integer",
                "identifier": {
                  "label": "integer",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "MillisecondsBetweenSamples",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The length of time between sampling times, measured in milliseconds.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "MinCount",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Lower bound on a count.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:integer",
                "identifier": {
                  "label": "integer",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Money",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Representation of an amount of currency or monetary value.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://example.com/shr/core/vs/CurrencyVS",
                      "bindingStrength": "REQUIRED",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Units",
                  "identifier": {
                    "label": "Units",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "NumberOfRepeats",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "How many times the action should be repeated.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:positiveInt",
                "identifier": {
                  "label": "positiveInt",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Numerator",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C2825219",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C2825219",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C2825219;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The dividend of a fraction.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "OccurrenceDuration",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The length of time in which something happens.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Duration",
                "identifier": {
                  "label": "Duration",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "OccurrencePeriod",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The point in time or span of time in which something happens.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "OccurrenceTimeOrPeriod",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:TimePeriod",
                "identifier": {
                  "label": "TimePeriod",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "OccurrenceTime",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The point in time in which something happens.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "OccurrenceTimeOrPeriod",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:dateTime",
                "identifier": {
                  "label": "dateTime",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "OccurrenceTimeOrPeriod",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The point in time or span of time in which something happens.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:date",
                    "identifier": {
                      "label": "date",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:dateTime",
                    "identifier": {
                      "label": "dateTime",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:TimePeriod",
                    "identifier": {
                      "label": "TimePeriod",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "OnBehalfOf",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The party represented by the actual participant.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:uri",
                    "identifier": {
                      "label": "uri",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Party",
                    "identifier": {
                      "label": "Party",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "OrganizationalIdentifier",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A code identifying a specific organization. The NPI should be provided, if available. Other business identifiers, such employer tax ID, or MVX code for vaccine manufacturers, should also be provided.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Identifier",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:TimePeriod",
                  "identifier": {
                    "label": "TimePeriod",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "unknown:Organization",
                  "identifier": {
                    "label": "Organization",
                    "type": "Identifier",
                    "namespace": "unknown"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Origin",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:SimpleQuantity",
                "identifier": {
                  "label": "SimpleQuantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ParsableContent",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A string that follows a formal syntax and can be analyzed and broken into meaningful parts.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "EmbeddedContent",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Formalism",
                  "identifier": {
                    "label": "Formalism",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Percentage",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0439165",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0439165",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0439165;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A percentage value where 100.0 represents 100%.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "CodeConstraint",
                    "code": {
                      "label": "http://unitsofmeasure.org:%",
                      "type": "Concept",
                      "system": "http://unitsofmeasure.org",
                      "code": "%",
                      "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                    },
                    "path": "shr.core.Units:shr.core.Coding"
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "PlainText",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A text written in a human language.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.base:Language",
                  "identifier": {
                    "label": "Language",
                    "type": "Identifier",
                    "namespace": "shr.base"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "PostalCode",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1514254",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1514254",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1514254;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A sequence of letters and digits used as part of a postal address, often designating a geographic region",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Priority",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0549179",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0549179",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0549179;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "An indication of the importance of an action.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:positiveInt",
                    "identifier": {
                      "label": "positiveInt",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:CodeableConcept",
                    "identifier": {
                      "label": "CodeableConcept",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Qount",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0750480",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0750480",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0750480;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The whole number of items, as a unit-bearing quantity.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "constraints": [
                    {
                      "type": "CodeConstraint",
                      "code": {
                        "label": "http://unitsofmeasure.org:1",
                        "type": "Concept",
                        "system": "http://unitsofmeasure.org",
                        "code": "1",
                        "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                      },
                      "path": "shr.core.Coding"
                    }
                  ],
                  "type": "Incomplete",
                  "label": "shr.core:Units",
                  "identifier": {
                    "label": "Units",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "QualitativeDateTime",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A point in time, described qualitatively.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/QualitativeDateTimeVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "QualitativeFrequency",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The frequency of an event, described qualitatively.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/QualitativeFrequencyVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "QualitativeLikelihood",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A qualitative (subjective) likelihood.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/QualitativeLikelihoodVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Quantity",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A quantity with units, whose value may be bounded from above or below, as defined in FHIR",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Comparator",
                  "identifier": {
                    "label": "Comparator",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Units",
                  "identifier": {
                    "label": "Units",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Range",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "An interval defined by a quantitative upper and/or lower bound. One of the two bounds must be specified, and the lower bound must be less than the upper bound. When Quantities are specified, the units of measure must be the same.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "TypeConstraint",
                      "isA": {
                        "label": "SimpleQuantity",
                        "type": "Identifier",
                        "namespace": "shr.core"
                      },
                      "onValue": true,
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:LowerBound",
                  "identifier": {
                    "label": "LowerBound",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "TypeConstraint",
                      "isA": {
                        "label": "SimpleQuantity",
                        "type": "Identifier",
                        "namespace": "shr.core"
                      },
                      "onValue": true,
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:UpperBound",
                  "identifier": {
                    "label": "UpperBound",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Ratio",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0456603",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0456603",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0456603;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A unit of measurement for the quotient of the amount of one entity to another.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Numerator",
                  "identifier": {
                    "label": "Numerator",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Denominator",
                  "identifier": {
                    "label": "Denominator",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "Reason",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0566251",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0566251",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0566251;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The justification for an action or non-action, conclusion, opinion, etc.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:string",
                    "identifier": {
                      "label": "string",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:CodeableConcept",
                    "identifier": {
                      "label": "CodeableConcept",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to shr.base:Content",
                    "identifier": {
                      "label": "Content",
                      "type": "Identifier",
                      "namespace": "shr.base"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ReceivedTime",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C2735124",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C2735124",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C2735124;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Time received by accepting facility or unit.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:dateTime",
                "identifier": {
                  "label": "dateTime",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "RecurrenceInterval",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The period of time after which the pattern repeats, for example, each day. To specify an event should take place every other Monday, the recurrence interval should be two weeks, and DayOfWeek should be Monday.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Duration",
                "identifier": {
                  "label": "Duration",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "RecurrencePattern",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A set of rules that describe when a recurring event is scheduled.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:RecurrenceInterval",
                  "identifier": {
                    "label": "RecurrenceInterval",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:DayOfWeek",
                  "identifier": {
                    "label": "DayOfWeek",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:TimeOfDay",
                  "identifier": {
                    "label": "TimeOfDay",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:DailyLifeEvent",
                  "identifier": {
                    "label": "DailyLifeEvent",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:LifeEventOffset",
                  "identifier": {
                    "label": "LifeEventOffset",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CountPerInterval",
                  "identifier": {
                    "label": "CountPerInterval",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "RecurrenceRange",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The start and end of the overall recurrence pattern in terms of dates/times or in terms of number of repeats. Could also be an event, such as when all doses are taken.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:TimePeriod",
                    "identifier": {
                      "label": "TimePeriod",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "shr.core:NumberOfRepeats",
                    "identifier": {
                      "label": "NumberOfRepeats",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ResourceLocation",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "URI where data can be found.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:uri",
                "identifier": {
                  "label": "uri",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "ResourceSize",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Number of bytes of content in the resource (if url provided)",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:unsignedInt",
                "identifier": {
                  "label": "unsignedInt",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "SampledData",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Data that comes from a series of measurements taken by a device, which may have upper and lower limits. The data type also supports more than one dimension in the data.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Origin",
                  "identifier": {
                    "label": "Origin",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:MillisecondsBetweenSamples",
                  "identifier": {
                    "label": "MillisecondsBetweenSamples",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CorrectionFactor",
                  "identifier": {
                    "label": "CorrectionFactor",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:LowerLimit",
                  "identifier": {
                    "label": "LowerLimit",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:UpperLimit",
                  "identifier": {
                    "label": "UpperLimit",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Dimensions",
                  "identifier": {
                    "label": "Dimensions",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "SemiquantDuration",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The duration of an event, described semi-quantitatively.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/SemiquantitativeDurationVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "SemiquantFrequency",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The frequency of an event, described semi-quantitatively.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/SemiquantitativeFrequencyVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Setting",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Description of the place or type of surroundings where something is positioned or where an event takes place.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/SettingVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Signatory",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The party signing.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "IdentifiableValue",
                    "label": "primitive:uri",
                    "identifier": {
                      "label": "uri",
                      "type": "Identifier",
                      "namespace": "primitive"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [],
                    "type": "RefValue",
                    "label": "reference to unknown:Party",
                    "identifier": {
                      "label": "Party",
                      "type": "Identifier",
                      "namespace": "unknown"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Signature",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A digital Signature - XML DigSig, JWT, Graphical image of signature, etc.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 1,
                  "constraints": [
                    {
                      "type": "ValueSetConstraint",
                      "valueset": "http://hl7.org/fhir/ValueSet/signature-type",
                      "bindingStrength": "EXTENSIBLE",
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:TypeAsaCoding",
                  "identifier": {
                    "label": "TypeAsaCoding",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:CreationTime",
                  "identifier": {
                    "label": "CreationTime",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Signatory",
                  "identifier": {
                    "label": "Signatory",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:OnBehalfOf",
                  "identifier": {
                    "label": "OnBehalfOf",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:ContentType",
                  "identifier": {
                    "label": "ContentType",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:BinaryData",
                  "identifier": {
                    "label": "BinaryData",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "SimpleQuantity",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A quantity where the comparator is not used, as defined in FHIR",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "min": 0,
                  "max": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Comparator",
                  "identifier": {
                    "label": "Comparator",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "State",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1552743",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1552743",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1552743;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (i.e. US 2 letter state codes). (Source: HL7 FHIR).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "GeopoliticalLocation",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Statistic",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C2828391",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C2828391",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C2828391;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A quantity that represents a statistic, e.g. maximum, minimum, mean, median, etc.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:StatisticType",
                  "identifier": {
                    "label": "StatisticType",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "StatisticType",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The type of statistic that is represented by the value.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://example.com/shr/core/vs/StatisticTypeVS",
                    "bindingStrength": "REQUIRED",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "TelecomNumberOrAddress",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A user name or other identifier on a telecommunication network, such as a telephone number (including country code and extension, if necessary), email address, or SkypeID.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "TimeOfDay",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Time of day the event should take place on the designated day(s). TimeOfDay should only be specified if the RecurrenceInterval and/or DayOfWeek establishes the day when the event should take place.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:time",
                "identifier": {
                  "label": "time",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "TimePeriod",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1948053",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1948053",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1948053;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A period of time defined by a start and end time, date, or year. If the start element is missing, the start of the period is not known. If the end element is missing, it means that the period is ongoing, or the start may be in the past, and the end date in the future, which means that period is expected/planned to end at the specified time. The end value includes any matching date/time. For example, the period 2011-05-23 to 2011-05-27 includes all the times from the start of the 23rd May through to the end of the 27th of May.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:TimePeriodStart",
                  "identifier": {
                    "label": "TimePeriodStart",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:TimePeriodEnd",
                  "identifier": {
                    "label": "TimePeriodEnd",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "TimePeriodEnd",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1522314",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1522314",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1522314;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The time at which something is to end or did end. Boundary is considered inclusive.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:dateTime",
                "identifier": {
                  "label": "dateTime",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "TimePeriodStart",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C1301880",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C1301880",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1301880;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The time at which something is to take effect, start, or did start. Boundary is considered inclusive.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:dateTime",
                "identifier": {
                  "label": "dateTime",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Timing",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A timing schedule that specifies an event that may occur multiple times. Timing offers a choice of multiple OccurrenceTime (used is used to specify specific times), or recurrence patterns.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "children": [
                {
                  "min": 0,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:OccurrenceTime",
                  "identifier": {
                    "label": "OccurrenceTime",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:TimingCode",
                  "identifier": {
                    "label": "TimingCode",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:EventDuration",
                  "identifier": {
                    "label": "EventDuration",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:RecurrencePattern",
                  "identifier": {
                    "label": "RecurrencePattern",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 0,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:RecurrenceRange",
                  "identifier": {
                    "label": "RecurrenceRange",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "TimingCode",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A code for the timing schedule. Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "ValueSetConstraint",
                    "valueset": "http://hl7.org/fhir/ValueSet/timing-abbreviation",
                    "bindingStrength": "EXTENSIBLE",
                    "path": ""
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:CodeableConcept",
                "identifier": {
                  "label": "CodeableConcept",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Title",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "A distinguishing word or group of words naming an item.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:string",
                "identifier": {
                  "label": "string",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "TypeAsaCoding",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0332307",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0332307",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0332307;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Coding",
                "identifier": {
                  "label": "Coding",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "UnitedStatesAddress",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "An address for a place in the USA, conforming to US mail postal conventions. (Source: HL7 FHIR).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "Address",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": [
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [
                    {
                      "type": "TypeConstraint",
                      "isA": {
                        "label": "UnitedStatesState",
                        "type": "Identifier",
                        "namespace": "shr.core"
                      },
                      "onValue": false,
                      "path": ""
                    }
                  ],
                  "type": "IdentifiableValue",
                  "label": "shr.core:State",
                  "identifier": {
                    "label": "State",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                },
                {
                  "min": 1,
                  "max": 1,
                  "constraints": [],
                  "type": "IdentifiableValue",
                  "label": "shr.core:Country",
                  "identifier": {
                    "label": "Country",
                    "type": "Identifier",
                    "namespace": "shr.core"
                  }
                }
              ]
            },
            {
              "type": "DataElement",
              "label": "UnitedStatesState",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C3148680",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C3148680",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C3148680;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A state or territory in the USA expressed by 2-letter US Postal code.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "State",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              ],
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Units",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "Code for the unit of measure of the quantity.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "ChoiceValue",
                "value": [
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [
                      {
                        "type": "ValueSetConstraint",
                        "valueset": "http://hl7.org/fhir/ValueSet/ucum-units",
                        "bindingStrength": "REQUIRED",
                        "path": ""
                      }
                    ],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Coding",
                    "identifier": {
                      "label": "Coding",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  },
                  {
                    "min": 1,
                    "max": 1,
                    "constraints": [
                      {
                        "type": "ValueSetConstraint",
                        "valueset": "http://example.com/shr/core/vs/CurrencyVS",
                        "bindingStrength": "REQUIRED",
                        "path": ""
                      }
                    ],
                    "type": "IdentifiableValue",
                    "label": "shr.core:Coding",
                    "identifier": {
                      "label": "Coding",
                      "type": "Identifier",
                      "namespace": "shr.core"
                    }
                  }
                ]
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "UpperBound",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The upper limit on a quantitative value.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "UpperLimit",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [],
              "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value 'U' (higher than detection limit).",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:decimal",
                "identifier": {
                  "label": "decimal",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Version",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0333052",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0333052",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0333052;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "A string identifying the particular of form of something (such as a code system or software product) that is different in some way from another form of the same thing.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [],
                "type": "IdentifiableValue",
                "label": "primitive:id",
                "identifier": {
                  "label": "id",
                  "type": "Identifier",
                  "namespace": "primitive"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Volume",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0449468",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0449468",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0449468;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The amount of three dimensional space occupied by an object or the capacity of a space or container.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "ObservationComponent",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "CodeConstraint",
                    "code": {
                      "label": "http://unitsofmeasure.org:TBD",
                      "type": "Concept",
                      "system": "http://unitsofmeasure.org",
                      "code": "TBD",
                      "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                    },
                    "path": "shr.core.Units:shr.core.Coding"
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            },
            {
              "type": "DataElement",
              "label": "Width",
              "isEntry": false,
              "isAbstract": false,
              "concepts": [
                {
                  "label": "http://ncimeta.nci.nih.gov:C0487742",
                  "type": "Concept",
                  "system": "http://ncimeta.nci.nih.gov",
                  "code": "C0487742",
                  "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0487742;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
                }
              ],
              "description": "The measurement or extent of something from side to side.",
              "grammarVersion": {
                "major": 5,
                "minor": 0,
                "patch": 0
              },
              "basedOn": [
                {
                  "label": "ObservationComponent",
                  "type": "Identifier",
                  "namespace": "unknown"
                }
              ],
              "value": {
                "min": 1,
                "max": 1,
                "constraints": [
                  {
                    "type": "CodeConstraint",
                    "code": {
                      "label": "http://unitsofmeasure.org:TBD",
                      "type": "Concept",
                      "system": "http://unitsofmeasure.org",
                      "code": "TBD",
                      "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
                    },
                    "path": "shr.core.Units:shr.core.Coding"
                  }
                ],
                "type": "IdentifiableValue",
                "label": "shr.core:Quantity",
                "identifier": {
                  "label": "Quantity",
                  "type": "Identifier",
                  "namespace": "shr.core"
                }
              },
              "children": []
            }
          ]
        }
      ]
    },
    {
      "label": "Value Sets",
      "type": "ValueSets",
      "children": [
        {
          "label": "PoplinActivitiesVS",
          "namespace": "poplin.ps",
          "type": "ValueSet",
          "url": "http://example.com/poplin/ps/vs/PoplinActivitiesVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Provider Screening Application for and Organization",
              "code": {
                "label": "Provider Screening Application for and Organization",
                "type": "code",
                "code": "ps_application_organization",
                "system": "http://example.com/poplin/ps/cs/PoplinActivitiesCS",
                "url": "http://example.com/poplin/ps/cs/PoplinActivitiesCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Provider Screening Application for an Individual Provider",
              "code": {
                "label": "Provider Screening Application for an Individual Provider",
                "type": "code",
                "code": "ps_application_provider",
                "system": "http://example.com/poplin/ps/cs/PoplinActivitiesCS",
                "url": "http://example.com/poplin/ps/cs/PoplinActivitiesCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "ProposedStatusVS",
          "namespace": "shr.base",
          "description": "The status of a proposal.",
          "type": "ValueSet",
          "url": "http://example.com/shr/base/vs/ProposedStatusVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The proposal has been proposed, but not accepted or rejected.",
              "code": {
                "label": "The proposal has been proposed, but not accepted or rejected.",
                "type": "code",
                "code": "proposed",
                "system": "http://example.com/shr/base/cs/ProposedStatusCS",
                "url": "http://example.com/shr/base/cs/ProposedStatusCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The proposal was accepted.",
              "code": {
                "label": "The proposal was accepted.",
                "type": "code",
                "code": "accepted",
                "system": "http://example.com/shr/base/cs/ProposedStatusCS",
                "url": "http://example.com/shr/base/cs/ProposedStatusCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The proposal was rejected",
              "code": {
                "label": "The proposal was rejected",
                "type": "code",
                "code": "rejected",
                "system": "http://example.com/shr/base/cs/ProposedStatusCS",
                "url": "http://example.com/shr/base/cs/ProposedStatusCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "CurrencyVS",
          "namespace": "shr.core",
          "description": "Value set containing ISO 4217 currency codes.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/CurrencyVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "urn:iso:std:iso:4217",
              "system": "urn:iso:std:iso:4217",
              "type": "ValueSetIncludesFromCodeSystemRule"
            }
          ]
        },
        {
          "label": "CodingQualifierVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/CodingQualifierVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The preferred, standardized code for interoperability purposes. There should be only one coding in a CodeableConcept with this tag.",
              "code": {
                "label": "The preferred, standardized code for interoperability purposes. There should be only one coding in a CodeableConcept with this tag.",
                "type": "code",
                "code": "preferred_code",
                "system": "http://example.com/shr/core/cs/CodingQualifierCS",
                "url": "http://example.com/shr/core/cs/CodingQualifierCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The code found in the information source for this entry, e.g., the raw, original, or first encoding.",
              "code": {
                "label": "The code found in the information source for this entry, e.g., the raw, original, or first encoding.",
                "type": "code",
                "code": "source_code",
                "system": "http://example.com/shr/core/cs/CodingQualifierCS",
                "url": "http://example.com/shr/core/cs/CodingQualifierCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The code was directly selected by the user, as opposed to being determined after the fact via interpretation of notes or natural language processing.",
              "code": {
                "label": "The code was directly selected by the user, as opposed to being determined after the fact via interpretation of notes or natural language processing.",
                "type": "code",
                "code": "user_selected_code",
                "system": "http://example.com/shr/core/cs/CodingQualifierCS",
                "url": "http://example.com/shr/core/cs/CodingQualifierCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The code was determined after-the-fact from source data, either through translation, or via interpretation of free text (by human or machine).",
              "code": {
                "label": "The code was determined after-the-fact from source data, either through translation, or via interpretation of free text (by human or machine).",
                "type": "code",
                "code": "derived_code",
                "system": "http://example.com/shr/core/cs/CodingQualifierCS",
                "url": "http://example.com/shr/core/cs/CodingQualifierCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Indicates the code is a less specific term or a categorization of the source or standard code, i.e., a hypernym. For example, a code for 'vital sign' in the context of a body weight measurement would be a category code. Category codes can  be useful for search and query purposes.",
              "code": {
                "label": "Indicates the code is a less specific term or a categorization of the source or standard code, i.e., a hypernym. For example, a code for 'vital sign' in the context of a body weight measurement would be a category code. Category codes can  be useful for search and query purposes.",
                "type": "code",
                "code": "category_code",
                "system": "http://example.com/shr/core/cs/CodingQualifierCS",
                "url": "http://example.com/shr/core/cs/CodingQualifierCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The code is an expression in an expression language defined by the CodeSystem",
              "code": {
                "label": "The code is an expression in an expression language defined by the CodeSystem",
                "type": "code",
                "code": "coded_expression",
                "system": "http://example.com/shr/core/cs/CodingQualifierCS",
                "url": "http://example.com/shr/core/cs/CodingQualifierCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The code was supplied by the system by default, because no specific coded value was available.",
              "code": {
                "label": "The code was supplied by the system by default, because no specific coded value was available.",
                "type": "code",
                "code": "default_code",
                "system": "http://example.com/shr/core/cs/CodingQualifierCS",
                "url": "http://example.com/shr/core/cs/CodingQualifierCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "ClockDirectionVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/ClockDirectionVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "1 o'clock position",
              "code": {
                "label": "1 o'clock position",
                "type": "code",
                "code": "C3841389",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C3841389;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "2 o'clock position",
              "code": {
                "label": "2 o'clock position",
                "type": "code",
                "code": "C0442313",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442313;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "3 o'clock position",
              "code": {
                "label": "3 o'clock position",
                "type": "code",
                "code": "C0442315",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442315;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "4 o'clock position",
              "code": {
                "label": "4 o'clock position",
                "type": "code",
                "code": "C0442317",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442317;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "5 o'clock position",
              "code": {
                "label": "5 o'clock position",
                "type": "code",
                "code": "C0442319",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442319;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "6 o'clock position",
              "code": {
                "label": "6 o'clock position",
                "type": "code",
                "code": "C0442321",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442321;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "7 o'clock position",
              "code": {
                "label": "7 o'clock position",
                "type": "code",
                "code": "C0442323",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442323;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "8 o'clock position",
              "code": {
                "label": "8 o'clock position",
                "type": "code",
                "code": "C0442325",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442325;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "9 o'clock position",
              "code": {
                "label": "9 o'clock position",
                "type": "code",
                "code": "C0442327",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442327;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "10 o'clock position",
              "code": {
                "label": "10 o'clock position",
                "type": "code",
                "code": "C0442329",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0442329;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "11 o'clock position",
              "code": {
                "label": "11 o'clock position",
                "type": "code",
                "code": "C3841386",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C3841386;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "12 o'clock position",
              "code": {
                "label": "12 o'clock position",
                "type": "code",
                "code": "C3841388",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C3841388;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "UpperBoundTypeVS",
          "namespace": "shr.core",
          "description": "Indicates the actual value is lt (<) or lte (<=) the given value.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/UpperBoundTypeVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The actual value is less than the given value.",
              "code": {
                "label": "The actual value is less than the given value.",
                "type": "code",
                "code": "<",
                "system": "http://hl7.org/fhir/quantity-comparator",
                "url": "http://hl7.org/fhir/quantity-comparator#definition"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The actual value is less than or equal to the given value.",
              "code": {
                "label": "The actual value is less than or equal to the given value.",
                "type": "code",
                "code": "<=",
                "system": "http://hl7.org/fhir/quantity-comparator",
                "url": "http://hl7.org/fhir/quantity-comparator#definition"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "LowerBoundTypeVS",
          "namespace": "shr.core",
          "description": "Indicates the actual value is gt (>) or gte (>=) the given value.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/LowerBoundTypeVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The actual value is greater than the given value.",
              "code": {
                "label": "The actual value is greater than the given value.",
                "type": "code",
                "code": ">",
                "system": "http://hl7.org/fhir/quantity-comparator",
                "url": "http://hl7.org/fhir/quantity-comparator#definition"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The actual value is greater than or equal to the given value.",
              "code": {
                "label": "The actual value is greater than or equal to the given value.",
                "type": "code",
                "code": ">=",
                "system": "http://hl7.org/fhir/quantity-comparator",
                "url": "http://hl7.org/fhir/quantity-comparator#definition"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "StatisticTypeVS",
          "namespace": "shr.core",
          "description": "How to interpret a reported quantity, i.e, whether the quantity is an maximum, minimum, mean, median, etc.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/StatisticTypeVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Desired or observed minimum",
              "code": {
                "label": "Desired or observed minimum",
                "type": "code",
                "code": "C1524031",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1524031;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Desired or observed maximum",
              "code": {
                "label": "Desired or observed maximum",
                "type": "code",
                "code": "C0806909",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0806909;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Mean value",
              "code": {
                "label": "Mean value",
                "type": "code",
                "code": "C0444504",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0444504;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Median value",
              "code": {
                "label": "Median value",
                "type": "code",
                "code": "C0876920",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0876920;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Count",
              "code": {
                "label": "Count",
                "type": "code",
                "code": "C0750480",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0750480;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Range, the difference between lowest and highest numerical values",
              "code": {
                "label": "Range, the difference between lowest and highest numerical values",
                "type": "code",
                "code": "C1514721",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1514721;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Rank, priority, or order, with 1 being the first (highest) rank",
              "code": {
                "label": "Rank, priority, or order, with 1 being the first (highest) rank",
                "type": "code",
                "code": "TBD",
                "system": "urn:tbd",
                "url": ""
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Standard deviation",
              "code": {
                "label": "Standard deviation",
                "type": "code",
                "code": "TBD",
                "system": "urn:tbd",
                "url": ""
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "TimeUnitOfMeasureVS",
          "namespace": "shr.core",
          "description": "Units of measure related to time.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/TimeUnitOfMeasureVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Microsecond",
              "code": {
                "label": "Microsecond",
                "type": "code",
                "code": "us",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Millisecond",
              "code": {
                "label": "Millisecond",
                "type": "code",
                "code": "ms",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Second",
              "code": {
                "label": "Second",
                "type": "code",
                "code": "s",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Minute",
              "code": {
                "label": "Minute",
                "type": "code",
                "code": "min",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Hour",
              "code": {
                "label": "Hour",
                "type": "code",
                "code": "h",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Week",
              "code": {
                "label": "Week",
                "type": "code",
                "code": "wk",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Month",
              "code": {
                "label": "Month",
                "type": "code",
                "code": "mo",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Year",
              "code": {
                "label": "Year",
                "type": "code",
                "code": "a",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "UnitsOfLengthVS",
          "namespace": "shr.core",
          "description": "Units of measure related to length or distance.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/UnitsOfLengthVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Picometer",
              "code": {
                "label": "Picometer",
                "type": "code",
                "code": "pm",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Nanometer",
              "code": {
                "label": "Nanometer",
                "type": "code",
                "code": "nm",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Millimeter",
              "code": {
                "label": "Millimeter",
                "type": "code",
                "code": "mm",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Centimeter",
              "code": {
                "label": "Centimeter",
                "type": "code",
                "code": "cm",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Meter",
              "code": {
                "label": "Meter",
                "type": "code",
                "code": "m",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Kilometer",
              "code": {
                "label": "Kilometer",
                "type": "code",
                "code": "km",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Foot",
              "code": {
                "label": "Foot",
                "type": "code",
                "code": "ft-us",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Inch",
              "code": {
                "label": "Inch",
                "type": "code",
                "code": "in-us",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Mile",
              "code": {
                "label": "Mile",
                "type": "code",
                "code": "mi_us",
                "system": "http://unitsofmeasure.org",
                "url": "http://unitsofmeasure.org/ucum.html#section-Alphabetic-Index-By-Symbol"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "QualitativeDateTimeVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/QualitativeDateTimeVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "A time or time period in the indefinite past",
              "code": {
                "label": "A time or time period in the indefinite past",
                "type": "code",
                "code": "past",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Many years ago",
              "code": {
                "label": "Many years ago",
                "type": "code",
                "code": "many_years_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several years ago",
              "code": {
                "label": "Several years ago",
                "type": "code",
                "code": "several_years_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "About a year ago",
              "code": {
                "label": "About a year ago",
                "type": "code",
                "code": "one_year_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several months ago",
              "code": {
                "label": "Several months ago",
                "type": "code",
                "code": "months_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several weeks ago",
              "code": {
                "label": "Several weeks ago",
                "type": "code",
                "code": "weeks_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several days ago",
              "code": {
                "label": "Several days ago",
                "type": "code",
                "code": "days_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several hours ago",
              "code": {
                "label": "Several hours ago",
                "type": "code",
                "code": "hours_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several minutes ago",
              "code": {
                "label": "Several minutes ago",
                "type": "code",
                "code": "minutes_ago",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "At a time previous to the current encounter or admission",
              "code": {
                "label": "At a time previous to the current encounter or admission",
                "type": "code",
                "code": "preexisting",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Now, currently, presently continuing or ongoing",
              "code": {
                "label": "Now, currently, presently continuing or ongoing",
                "type": "code",
                "code": "now",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several minutes from now",
              "code": {
                "label": "Several minutes from now",
                "type": "code",
                "code": "minutes_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several hours from now",
              "code": {
                "label": "Several hours from now",
                "type": "code",
                "code": "hours_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several days from now",
              "code": {
                "label": "Several days from now",
                "type": "code",
                "code": "days_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several weeks from now",
              "code": {
                "label": "Several weeks from now",
                "type": "code",
                "code": "weeks_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several months from now",
              "code": {
                "label": "Several months from now",
                "type": "code",
                "code": "months_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "About a year from now",
              "code": {
                "label": "About a year from now",
                "type": "code",
                "code": "one_year_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several years from now",
              "code": {
                "label": "Several years from now",
                "type": "code",
                "code": "several_years_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Many years from now",
              "code": {
                "label": "Many years from now",
                "type": "code",
                "code": "many_years_hence",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A time or time period in the indefinite future",
              "code": {
                "label": "A time or time period in the indefinite future",
                "type": "code",
                "code": "future",
                "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
                "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "SemiquantitativeDurationVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/SemiquantitativeDurationVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Many years",
              "code": {
                "label": "Many years",
                "type": "code",
                "code": "many_years",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several years",
              "code": {
                "label": "Several years",
                "type": "code",
                "code": "several_years",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "About a year",
              "code": {
                "label": "About a year",
                "type": "code",
                "code": "one_year",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several months but less than a year",
              "code": {
                "label": "Several months but less than a year",
                "type": "code",
                "code": "months",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several weeks but less than a month",
              "code": {
                "label": "Several weeks but less than a month",
                "type": "code",
                "code": "weeks",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several days but less than a week",
              "code": {
                "label": "Several days but less than a week",
                "type": "code",
                "code": "days",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several hours but less than a day",
              "code": {
                "label": "Several hours but less than a day",
                "type": "code",
                "code": "hours",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several minutes but less than an hour",
              "code": {
                "label": "Several minutes but less than an hour",
                "type": "code",
                "code": "minutes",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Several seconds but less than a minute",
              "code": {
                "label": "Several seconds but less than a minute",
                "type": "code",
                "code": "seconds",
                "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "SemiquantitativeFrequencyVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/SemiquantitativeFrequencyVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Never",
              "code": {
                "label": "Never",
                "type": "code",
                "code": "never",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Less than yearly",
              "code": {
                "label": "Less than yearly",
                "type": "code",
                "code": "less_than_yearly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Yearly",
              "code": {
                "label": "Yearly",
                "type": "code",
                "code": "yearly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "More than once yearly",
              "code": {
                "label": "More than once yearly",
                "type": "code",
                "code": "mot_yearly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Monthly",
              "code": {
                "label": "Monthly",
                "type": "code",
                "code": "monthly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Weekly",
              "code": {
                "label": "Weekly",
                "type": "code",
                "code": "weekly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "More than once weekly",
              "code": {
                "label": "More than once weekly",
                "type": "code",
                "code": "mto_weekly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Daily",
              "code": {
                "label": "Daily",
                "type": "code",
                "code": "daily",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "More than once daily",
              "code": {
                "label": "More than once daily",
                "type": "code",
                "code": "mto_daily",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Hourly",
              "code": {
                "label": "Hourly",
                "type": "code",
                "code": "hourly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "More than once hourly",
              "code": {
                "label": "More than once hourly",
                "type": "code",
                "code": "mto_hourly",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Every minute",
              "code": {
                "label": "Every minute",
                "type": "code",
                "code": "minutely",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Continuously",
              "code": {
                "label": "Continuously",
                "type": "code",
                "code": "continuously",
                "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "QualitativeFrequencyVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/QualitativeFrequencyVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Virtually always or every time",
              "code": {
                "label": "Virtually always or every time",
                "type": "code",
                "code": "always",
                "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Frequently or often",
              "code": {
                "label": "Frequently or often",
                "type": "code",
                "code": "usually",
                "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Occasionally or sometimes",
              "code": {
                "label": "Occasionally or sometimes",
                "type": "code",
                "code": "sometimes",
                "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Rarely",
              "code": {
                "label": "Rarely",
                "type": "code",
                "code": "rarely",
                "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Never",
              "code": {
                "label": "Never",
                "type": "code",
                "code": "never",
                "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
                "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "YesNoVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/YesNoVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Yes, or true",
              "code": {
                "label": "Yes, or true",
                "type": "code",
                "code": "yes",
                "system": "http://example.com/shr/core/cs/YesNoCS",
                "url": "http://example.com/shr/core/cs/YesNoCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "No, or false",
              "code": {
                "label": "No, or false",
                "type": "code",
                "code": "no",
                "system": "http://example.com/shr/core/cs/YesNoCS",
                "url": "http://example.com/shr/core/cs/YesNoCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "YesNoUnknownVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/YesNoUnknownVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Yes, or true",
              "code": {
                "label": "Yes, or true",
                "type": "code",
                "code": "yes",
                "system": "http://example.com/shr/core/cs/YesNoUnknownCS",
                "url": "http://example.com/shr/core/cs/YesNoUnknownCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "No, or false",
              "code": {
                "label": "No, or false",
                "type": "code",
                "code": "no",
                "system": "http://example.com/shr/core/cs/YesNoUnknownCS",
                "url": "http://example.com/shr/core/cs/YesNoUnknownCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Unknown",
              "code": {
                "label": "Unknown",
                "type": "code",
                "code": "unknown",
                "system": "http://example.com/shr/core/cs/YesNoUnknownCS",
                "url": "http://example.com/shr/core/cs/YesNoUnknownCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "QualitativeValueScaleVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/QualitativeValueScaleVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Very high",
              "code": {
                "label": "Very high",
                "type": "code",
                "code": "very_high",
                "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
                "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "High",
              "code": {
                "label": "High",
                "type": "code",
                "code": "high",
                "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
                "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Moderate/Intermediate or Borderline",
              "code": {
                "label": "Moderate/Intermediate or Borderline",
                "type": "code",
                "code": "moderate",
                "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
                "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Low",
              "code": {
                "label": "Low",
                "type": "code",
                "code": "low",
                "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
                "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Very low",
              "code": {
                "label": "Very low",
                "type": "code",
                "code": "very_low",
                "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
                "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "QualitativeLikelihoodVS",
          "namespace": "shr.core",
          "description": "The likelihood of an event or state, expressed qualitatively. Qualitative likelihoods are associated with judgments and assessments. Values are based on US Intelligence Community's standard language used to describe judgements of likelihood.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/QualitativeLikelihoodVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "With certainty or near-complete certainty, an event that definitely has or almost certainly will happen",
              "code": {
                "label": "With certainty or near-complete certainty, an event that definitely has or almost certainly will happen",
                "type": "code",
                "code": "definitely",
                "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
                "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Very likely, highly probable, e.g., an event with more than 80% but less than 100% likelihood",
              "code": {
                "label": "Very likely, highly probable, e.g., an event with more than 80% but less than 100% likelihood",
                "type": "code",
                "code": "very_likely",
                "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
                "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Likely or probable, e.g., an event with 60% to 80% likelihood",
              "code": {
                "label": "Likely or probable, e.g., an event with 60% to 80% likelihood",
                "type": "code",
                "code": "likely",
                "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
                "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Roughly equal chance or even odds of happening, between 40% and 60% probability",
              "code": {
                "label": "Roughly equal chance or even odds of happening, between 40% and 60% probability",
                "type": "code",
                "code": "even_chance",
                "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
                "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Not likely or improbable, e.g., an event with 20% to 40% likelihood",
              "code": {
                "label": "Not likely or improbable, e.g., an event with 20% to 40% likelihood",
                "type": "code",
                "code": "unlikely",
                "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
                "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Very unlikely, highly improbable, e.g., an event with less than 20% but non-zero likelihood",
              "code": {
                "label": "Very unlikely, highly improbable, e.g., an event with less than 20% but non-zero likelihood",
                "type": "code",
                "code": "very_unlikely",
                "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
                "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "ThreePriorityVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/ThreePriorityVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The first or primary item or alterative in a preference list.",
              "code": {
                "label": "The first or primary item or alterative in a preference list.",
                "type": "code",
                "code": "primary",
                "system": "http://example.com/shr/core/cs/ThreePriorityCS",
                "url": "http://example.com/shr/core/cs/ThreePriorityCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "The second or backup preference.",
              "code": {
                "label": "The second or backup preference.",
                "type": "code",
                "code": "secondary",
                "system": "http://example.com/shr/core/cs/ThreePriorityCS",
                "url": "http://example.com/shr/core/cs/ThreePriorityCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "An alternative to primary and secondard choices in a preference list.",
              "code": {
                "label": "An alternative to primary and secondard choices in a preference list.",
                "type": "code",
                "code": "third_or_lower",
                "system": "http://example.com/shr/core/cs/ThreePriorityCS",
                "url": "http://example.com/shr/core/cs/ThreePriorityCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "SettingVS",
          "namespace": "shr.core",
          "description": "What type of place is found at a given location. More than one descriptor may be applicable.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/SettingVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "At or during work, in a workplace setting.",
              "code": {
                "label": "At or during work, in a workplace setting.",
                "type": "code",
                "code": "work",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "At home",
              "code": {
                "label": "At home",
                "type": "code",
                "code": "home",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "In a residential setting",
              "code": {
                "label": "In a residential setting",
                "type": "code",
                "code": "residental",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A primary or secondary school",
              "code": {
                "label": "A primary or secondary school",
                "type": "code",
                "code": "school",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "In a parked or moving vehicle",
              "code": {
                "label": "In a parked or moving vehicle",
                "type": "code",
                "code": "vehicle",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "An non-manufacturing, indoor business setting",
              "code": {
                "label": "An non-manufacturing, indoor business setting",
                "type": "code",
                "code": "office",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A manufacturing-oriented business setting",
              "code": {
                "label": "A manufacturing-oriented business setting",
                "type": "code",
                "code": "factory",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A place of business",
              "code": {
                "label": "A place of business",
                "type": "code",
                "code": "business",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A setting where food is served",
              "code": {
                "label": "A setting where food is served",
                "type": "code",
                "code": "restaurant",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A place where food is prepared",
              "code": {
                "label": "A place where food is prepared",
                "type": "code",
                "code": "food_prep",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Workplace that is primarily outdoors",
              "code": {
                "label": "Workplace that is primarily outdoors",
                "type": "code",
                "code": "worksite",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A setting where manufacturing takes place",
              "code": {
                "label": "A setting where manufacturing takes place",
                "type": "code",
                "code": "manufacturing",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A building or residence that is owned",
              "code": {
                "label": "A building or residence that is owned",
                "type": "code",
                "code": "owned",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A building or residence that is rented",
              "code": {
                "label": "A building or residence that is rented",
                "type": "code",
                "code": "rental",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Shared (unassisted) living residence, such as a dormitory or fraternity",
              "code": {
                "label": "Shared (unassisted) living residence, such as a dormitory or fraternity",
                "type": "code",
                "code": "dorm",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Foster care group home",
              "code": {
                "label": "Foster care group home",
                "type": "code",
                "code": "foster",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Assisted living or independent living facility",
              "code": {
                "label": "Assisted living or independent living facility",
                "type": "code",
                "code": "assisted",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Skilled nursing facility or other Long-Term Care",
              "code": {
                "label": "Skilled nursing facility or other Long-Term Care",
                "type": "code",
                "code": "snf",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Homeless or other type of shelter",
              "code": {
                "label": "Homeless or other type of shelter",
                "type": "code",
                "code": "shelter",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Hotel or motel",
              "code": {
                "label": "Hotel or motel",
                "type": "code",
                "code": "hotel",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Permanent supportive housing for formerly homeless persons (such as SHP, S+C, or SRO Mod Rehab)",
              "code": {
                "label": "Permanent supportive housing for formerly homeless persons (such as SHP, S+C, or SRO Mod Rehab)",
                "type": "code",
                "code": "psh",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Psychiatric hospital or other psychiatric facility",
              "code": {
                "label": "Psychiatric hospital or other psychiatric facility",
                "type": "code",
                "code": "psych",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Substance abuse treatment facility or detox center",
              "code": {
                "label": "Substance abuse treatment facility or detox center",
                "type": "code",
                "code": "detox",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Individual resides in a correctional facility, state hospital, jail, prison, youth authority facility, juvenile hall, boot camp or Boys Ranch.",
              "code": {
                "label": "Individual resides in a correctional facility, state hospital, jail, prison, youth authority facility, juvenile hall, boot camp or Boys Ranch.",
                "type": "code",
                "code": "prison",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Transitional housing, residential provier program, or any type of halfway house",
              "code": {
                "label": "Transitional housing, residential provier program, or any type of halfway house",
                "type": "code",
                "code": "transition",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A homeless camp, abandoned building, shantytown, bus/train/subway station/airport, or squatter area",
              "code": {
                "label": "A homeless camp, abandoned building, shantytown, bus/train/subway station/airport, or squatter area",
                "type": "code",
                "code": "squat",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Outside of any shelter, e.g., on a street",
              "code": {
                "label": "Outside of any shelter, e.g., on a street",
                "type": "code",
                "code": "outdoors",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Agricultural setting",
              "code": {
                "label": "Agricultural setting",
                "type": "code",
                "code": "agricultural",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "A farm with livestock",
              "code": {
                "label": "A farm with livestock",
                "type": "code",
                "code": "farm",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "On a battlefield",
              "code": {
                "label": "On a battlefield",
                "type": "code",
                "code": "battlefield",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Deployed to a military camp or area",
              "code": {
                "label": "Deployed to a military camp or area",
                "type": "code",
                "code": "deployed",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "On a boat",
              "code": {
                "label": "On a boat",
                "type": "code",
                "code": "ship",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "On an airplane",
              "code": {
                "label": "On an airplane",
                "type": "code",
                "code": "airplane",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Aboard a submarine",
              "code": {
                "label": "Aboard a submarine",
                "type": "code",
                "code": "submarine",
                "system": "http://example.com/shr/core/cs/SettingCS",
                "url": "http://example.com/shr/core/cs/SettingCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "BodyPositionVS",
          "namespace": "shr.core",
          "description": "The body position with respect to gravity.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/BodyPositionVS",
          "concepts": [
            {
              "label": "http://loinc.org:8361-8",
              "type": "Concept",
              "system": "http://loinc.org",
              "code": "8361-8",
              "url": "http://s.details.loinc.org/LOINC/8361-8.html"
            }
          ],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "sitting position",
              "code": {
                "label": "sitting position",
                "type": "code",
                "code": "C0277814",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0277814;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "semi-sitting (Fowlers)",
              "code": {
                "label": "semi-sitting (Fowlers)",
                "type": "code",
                "code": "C0277811",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0277811;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "standing position (anatomical)",
              "code": {
                "label": "standing position (anatomical)",
                "type": "code",
                "code": "C0231472",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0231472;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "supine position (lying face up)",
              "code": {
                "label": "supine position (lying face up)",
                "type": "code",
                "code": "C0038846",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0038846;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "prone position(lying face down)",
              "code": {
                "label": "prone position(lying face down)",
                "type": "code",
                "code": "C0033422",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0033422;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "semi-prone position (sims position)",
              "code": {
                "label": "semi-prone position (sims position)",
                "type": "code",
                "code": "C0150435",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0150435;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "right lateral recumbent",
              "code": {
                "label": "right lateral recumbent",
                "type": "code",
                "code": "C0559228",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0559228;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "left lateral recumbent (lying on left side)",
              "code": {
                "label": "left lateral recumbent (lying on left side)",
                "type": "code",
                "code": "C0559227",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0559227;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "head-down tilt (Trendelenburg)",
              "code": {
                "label": "head-down tilt (Trendelenburg)",
                "type": "code",
                "code": "C0242683",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0242683;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Lithotomy position (lying on back with legs raised)",
              "code": {
                "label": "Lithotomy position (lying on back with legs raised)",
                "type": "code",
                "code": "C0150665",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0150665;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Knee-chest position",
              "code": {
                "label": "Knee-chest position",
                "type": "code",
                "code": "C0277810",
                "system": "http://ncimeta.nci.nih.gov",
                "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0277810;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "BodySiteVS",
          "namespace": "shr.core",
          "description": "Codes that describe normal and pathologic anatomic systems, regions, cavities, and spaces.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/BodySiteVS",
          "concepts": [
            {
              "label": "http://ncimeta.nci.nih.gov:C1545955",
              "type": "Concept",
              "system": "http://ncimeta.nci.nih.gov",
              "code": "C1545955",
              "url": "https://uts.nlm.nih.gov/metathesaurus.html#C1545955;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
            }
          ],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Body Structure",
              "code": {
                "label": "Body Structure",
                "type": "code",
                "code": "123037004",
                "system": "http://snomed.info/sct",
                "url": "https://uts.nlm.nih.gov/snomedctBrowser.html?conceptId=123037004"
              },
              "type": "ValueSetIncludesDescendentsRule"
            }
          ]
        },
        {
          "label": "LateralityVS",
          "namespace": "shr.core",
          "description": "Anatomical location or specimen further detailing the side(s) of interest.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/LateralityVS",
          "concepts": [
            {
              "label": "Anatomical laterality (http://ncimeta.nci.nih.gov:C0925205)",
              "type": "Concept",
              "system": "http://ncimeta.nci.nih.gov",
              "code": "C0925205",
              "display": "Anatomical laterality",
              "url": "https://uts.nlm.nih.gov/metathesaurus.html#C0925205;0;1;CUI;2016AB;EXACT_MATCH;CUI;*;"
            }
          ],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "CDISC SDTM Laterality Terminology",
              "code": {
                "label": "CDISC SDTM Laterality Terminology",
                "type": "code",
                "code": "C99073",
                "system": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/",
                "url": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/"
              },
              "type": "ValueSetIncludesFromCodeRule"
            }
          ]
        },
        {
          "label": "DirectionalityVS",
          "namespace": "shr.core",
          "description": "Anatomical location or specimen further detailing directionality.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/DirectionalityVS",
          "concepts": [
            {
              "label": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/:C99074",
              "type": "Concept",
              "system": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/",
              "code": "C99074",
              "url": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/"
            }
          ],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "CDISC SDTM Directionality Terminology",
              "code": {
                "label": "CDISC SDTM Directionality Terminology",
                "type": "code",
                "code": "C99074",
                "system": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/",
                "url": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/"
              },
              "type": "ValueSetIncludesFromCodeRule"
            }
          ]
        },
        {
          "label": "PortionTotalityVS",
          "namespace": "shr.core",
          "description": "Further detail of the anatomical location or specimen detailing whether it includes the entire entity or only a part or portion.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/PortionTotalityVS",
          "concepts": [
            {
              "label": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/:C99075",
              "type": "Concept",
              "system": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/",
              "code": "C99075",
              "url": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/"
            }
          ],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "CDISC SDTM Portion Totality Terminology",
              "code": {
                "label": "CDISC SDTM Portion Totality Terminology",
                "type": "code",
                "code": "C99075",
                "system": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/",
                "url": "https://evs.nci.nih.gov/ftp1/CDISC/SDTM/"
              },
              "type": "ValueSetIncludesFromCodeRule"
            }
          ]
        },
        {
          "label": "PerformanceGradingScaleVS",
          "namespace": "shr.core",
          "description": "A simple performance grading scale. Also useful for grading quality.",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/PerformanceGradingScaleVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Excellent",
              "code": {
                "label": "Excellent",
                "type": "code",
                "code": "excellent",
                "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
                "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Very good",
              "code": {
                "label": "Very good",
                "type": "code",
                "code": "very_good",
                "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
                "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Good",
              "code": {
                "label": "Good",
                "type": "code",
                "code": "good",
                "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
                "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Fair",
              "code": {
                "label": "Fair",
                "type": "code",
                "code": "fair",
                "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
                "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            },
            {
              "label": "Poor",
              "code": {
                "label": "Poor",
                "type": "code",
                "code": "poor",
                "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
                "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
              },
              "type": "ValueSetIncludesCodeRule"
            }
          ]
        },
        {
          "label": "DiseaseFindingVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/DiseaseFindingVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "64572001",
              "code": {
                "label": "64572001",
                "type": "code",
                "code": "64572001",
                "system": "http://snomed.info/sct",
                "url": "https://uts.nlm.nih.gov/snomedctBrowser.html?conceptId=64572001"
              },
              "type": "ValueSetIncludesDescendentsRule"
            }
          ]
        },
        {
          "label": "ClinicalFindingAbsentVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/ClinicalFindingAbsentVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "373572006",
              "code": {
                "label": "373572006",
                "type": "code",
                "code": "373572006",
                "system": "http://snomed.info/sct",
                "url": "https://uts.nlm.nih.gov/snomedctBrowser.html?conceptId=373572006"
              },
              "type": "ValueSetIncludesDescendentsRule"
            }
          ]
        },
        {
          "label": "QuestionCodeVS",
          "namespace": "shr.core",
          "type": "ValueSet",
          "url": "http://example.com/shr/core/vs/QuestionCodeVS",
          "concepts": [],
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "http://loinc.org",
              "system": "http://loinc.org",
              "type": "ValueSetIncludesFromCodeSystemRule"
            },
            {
              "label": "http://ncimeta.nci.nih.gov",
              "system": "http://ncimeta.nci.nih.gov",
              "type": "ValueSetIncludesFromCodeSystemRule"
            },
            {
              "label": "http://snomed.info/sct",
              "system": "http://snomed.info/sct",
              "type": "ValueSetIncludesFromCodeSystemRule"
            }
          ]
        }
      ]
    },
    {
      "label": "Code Systems",
      "type": "CodeSystems",
      "children": [
        {
          "label": "PoplinActivitiesCS",
          "namespace": "poplin.ps",
          "type": "CodeSystem",
          "url": "http://example.com/poplin/ps/cs/PoplinActivitiesCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Provider Screening Application for and Organization (http://example.com/poplin/ps/cs/PoplinActivitiesCS:ps_application_organization)",
              "type": "Concept",
              "system": "http://example.com/poplin/ps/cs/PoplinActivitiesCS",
              "code": "ps_application_organization",
              "display": "Provider Screening Application for and Organization",
              "url": "http://example.com/poplin/ps/cs/PoplinActivitiesCS"
            },
            {
              "label": "Provider Screening Application for an Individual Provider (http://example.com/poplin/ps/cs/PoplinActivitiesCS:ps_application_provider)",
              "type": "Concept",
              "system": "http://example.com/poplin/ps/cs/PoplinActivitiesCS",
              "code": "ps_application_provider",
              "display": "Provider Screening Application for an Individual Provider",
              "url": "http://example.com/poplin/ps/cs/PoplinActivitiesCS"
            }
          ]
        },
        {
          "label": "ProposedStatusCS",
          "namespace": "shr.base",
          "description": "The status of a proposal.",
          "type": "CodeSystem",
          "url": "http://example.com/shr/base/cs/ProposedStatusCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The proposal has been proposed, but not accepted or rejected. (http://example.com/shr/base/cs/ProposedStatusCS:proposed)",
              "type": "Concept",
              "system": "http://example.com/shr/base/cs/ProposedStatusCS",
              "code": "proposed",
              "display": "The proposal has been proposed, but not accepted or rejected.",
              "url": "http://example.com/shr/base/cs/ProposedStatusCS"
            },
            {
              "label": "The proposal was accepted. (http://example.com/shr/base/cs/ProposedStatusCS:accepted)",
              "type": "Concept",
              "system": "http://example.com/shr/base/cs/ProposedStatusCS",
              "code": "accepted",
              "display": "The proposal was accepted.",
              "url": "http://example.com/shr/base/cs/ProposedStatusCS"
            },
            {
              "label": "The proposal was rejected (http://example.com/shr/base/cs/ProposedStatusCS:rejected)",
              "type": "Concept",
              "system": "http://example.com/shr/base/cs/ProposedStatusCS",
              "code": "rejected",
              "display": "The proposal was rejected",
              "url": "http://example.com/shr/base/cs/ProposedStatusCS"
            }
          ]
        },
        {
          "label": "CodingQualifierCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/CodingQualifierCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The preferred, standardized code for interoperability purposes. There should be only one coding in a CodeableConcept with this tag. (http://example.com/shr/core/cs/CodingQualifierCS:preferred_code)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/CodingQualifierCS",
              "code": "preferred_code",
              "display": "The preferred, standardized code for interoperability purposes. There should be only one coding in a CodeableConcept with this tag.",
              "url": "http://example.com/shr/core/cs/CodingQualifierCS"
            },
            {
              "label": "The code found in the information source for this entry, e.g., the raw, original, or first encoding. (http://example.com/shr/core/cs/CodingQualifierCS:source_code)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/CodingQualifierCS",
              "code": "source_code",
              "display": "The code found in the information source for this entry, e.g., the raw, original, or first encoding.",
              "url": "http://example.com/shr/core/cs/CodingQualifierCS"
            },
            {
              "label": "The code was directly selected by the user, as opposed to being determined after the fact via interpretation of notes or natural language processing. (http://example.com/shr/core/cs/CodingQualifierCS:user_selected_code)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/CodingQualifierCS",
              "code": "user_selected_code",
              "display": "The code was directly selected by the user, as opposed to being determined after the fact via interpretation of notes or natural language processing.",
              "url": "http://example.com/shr/core/cs/CodingQualifierCS"
            },
            {
              "label": "The code was determined after-the-fact from source data, either through translation, or via interpretation of free text (by human or machine). (http://example.com/shr/core/cs/CodingQualifierCS:derived_code)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/CodingQualifierCS",
              "code": "derived_code",
              "display": "The code was determined after-the-fact from source data, either through translation, or via interpretation of free text (by human or machine).",
              "url": "http://example.com/shr/core/cs/CodingQualifierCS"
            },
            {
              "label": "Indicates the code is a less specific term or a categorization of the source or standard code, i.e., a hypernym. For example, a code for 'vital sign' in the context of a body weight measurement would be a category code. Category codes can  be useful for search and query purposes. (http://example.com/shr/core/cs/CodingQualifierCS:category_code)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/CodingQualifierCS",
              "code": "category_code",
              "display": "Indicates the code is a less specific term or a categorization of the source or standard code, i.e., a hypernym. For example, a code for 'vital sign' in the context of a body weight measurement would be a category code. Category codes can  be useful for search and query purposes.",
              "url": "http://example.com/shr/core/cs/CodingQualifierCS"
            },
            {
              "label": "The code is an expression in an expression language defined by the CodeSystem (http://example.com/shr/core/cs/CodingQualifierCS:coded_expression)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/CodingQualifierCS",
              "code": "coded_expression",
              "display": "The code is an expression in an expression language defined by the CodeSystem",
              "url": "http://example.com/shr/core/cs/CodingQualifierCS"
            },
            {
              "label": "The code was supplied by the system by default, because no specific coded value was available. (http://example.com/shr/core/cs/CodingQualifierCS:default_code)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/CodingQualifierCS",
              "code": "default_code",
              "display": "The code was supplied by the system by default, because no specific coded value was available.",
              "url": "http://example.com/shr/core/cs/CodingQualifierCS"
            }
          ]
        },
        {
          "label": "QualitativeDateTimeCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "A time or time period in the indefinite past (http://example.com/shr/core/cs/QualitativeDateTimeCS:past)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "past",
              "display": "A time or time period in the indefinite past",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Many years ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:many_years_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "many_years_ago",
              "display": "Many years ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several years ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:several_years_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "several_years_ago",
              "display": "Several years ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "About a year ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:one_year_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "one_year_ago",
              "display": "About a year ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several months ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:months_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "months_ago",
              "display": "Several months ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several weeks ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:weeks_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "weeks_ago",
              "display": "Several weeks ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several days ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:days_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "days_ago",
              "display": "Several days ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several hours ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:hours_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "hours_ago",
              "display": "Several hours ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several minutes ago (http://example.com/shr/core/cs/QualitativeDateTimeCS:minutes_ago)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "minutes_ago",
              "display": "Several minutes ago",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "At a time previous to the current encounter or admission (http://example.com/shr/core/cs/QualitativeDateTimeCS:preexisting)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "preexisting",
              "display": "At a time previous to the current encounter or admission",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Now, currently, presently continuing or ongoing (http://example.com/shr/core/cs/QualitativeDateTimeCS:now)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "now",
              "display": "Now, currently, presently continuing or ongoing",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several minutes from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:minutes_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "minutes_hence",
              "display": "Several minutes from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several hours from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:hours_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "hours_hence",
              "display": "Several hours from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several days from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:days_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "days_hence",
              "display": "Several days from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several weeks from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:weeks_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "weeks_hence",
              "display": "Several weeks from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several months from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:months_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "months_hence",
              "display": "Several months from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "About a year from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:one_year_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "one_year_hence",
              "display": "About a year from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Several years from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:several_years_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "several_years_hence",
              "display": "Several years from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "Many years from now (http://example.com/shr/core/cs/QualitativeDateTimeCS:many_years_hence)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "many_years_hence",
              "display": "Many years from now",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            },
            {
              "label": "A time or time period in the indefinite future (http://example.com/shr/core/cs/QualitativeDateTimeCS:future)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeDateTimeCS",
              "code": "future",
              "display": "A time or time period in the indefinite future",
              "url": "http://example.com/shr/core/cs/QualitativeDateTimeCS"
            }
          ]
        },
        {
          "label": "SemiquantitativeDurationCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Many years (http://example.com/shr/core/cs/SemiquantitativeDurationCS:many_years)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "many_years",
              "display": "Many years",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "Several years (http://example.com/shr/core/cs/SemiquantitativeDurationCS:several_years)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "several_years",
              "display": "Several years",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "About a year (http://example.com/shr/core/cs/SemiquantitativeDurationCS:one_year)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "one_year",
              "display": "About a year",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "Several months but less than a year (http://example.com/shr/core/cs/SemiquantitativeDurationCS:months)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "months",
              "display": "Several months but less than a year",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "Several weeks but less than a month (http://example.com/shr/core/cs/SemiquantitativeDurationCS:weeks)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "weeks",
              "display": "Several weeks but less than a month",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "Several days but less than a week (http://example.com/shr/core/cs/SemiquantitativeDurationCS:days)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "days",
              "display": "Several days but less than a week",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "Several hours but less than a day (http://example.com/shr/core/cs/SemiquantitativeDurationCS:hours)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "hours",
              "display": "Several hours but less than a day",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "Several minutes but less than an hour (http://example.com/shr/core/cs/SemiquantitativeDurationCS:minutes)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "minutes",
              "display": "Several minutes but less than an hour",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            },
            {
              "label": "Several seconds but less than a minute (http://example.com/shr/core/cs/SemiquantitativeDurationCS:seconds)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeDurationCS",
              "code": "seconds",
              "display": "Several seconds but less than a minute",
              "url": "http://example.com/shr/core/cs/SemiquantitativeDurationCS"
            }
          ]
        },
        {
          "label": "SemiquantitativeFrequencyCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Never (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:never)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "never",
              "display": "Never",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Less than yearly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:less_than_yearly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "less_than_yearly",
              "display": "Less than yearly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Yearly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:yearly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "yearly",
              "display": "Yearly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "More than once yearly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:mot_yearly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "mot_yearly",
              "display": "More than once yearly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Monthly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:monthly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "monthly",
              "display": "Monthly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Weekly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:weekly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "weekly",
              "display": "Weekly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "More than once weekly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:mto_weekly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "mto_weekly",
              "display": "More than once weekly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Daily (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:daily)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "daily",
              "display": "Daily",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "More than once daily (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:mto_daily)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "mto_daily",
              "display": "More than once daily",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Hourly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:hourly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "hourly",
              "display": "Hourly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "More than once hourly (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:mto_hourly)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "mto_hourly",
              "display": "More than once hourly",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Every minute (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:minutely)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "minutely",
              "display": "Every minute",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            },
            {
              "label": "Continuously (http://example.com/shr/core/cs/SemiquantitativeFrequencyCS:continuously)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS",
              "code": "continuously",
              "display": "Continuously",
              "url": "http://example.com/shr/core/cs/SemiquantitativeFrequencyCS"
            }
          ]
        },
        {
          "label": "QualitativeFrequencyCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Virtually always or every time (http://example.com/shr/core/cs/QualitativeFrequencyCS:always)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
              "code": "always",
              "display": "Virtually always or every time",
              "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
            },
            {
              "label": "Frequently or often (http://example.com/shr/core/cs/QualitativeFrequencyCS:usually)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
              "code": "usually",
              "display": "Frequently or often",
              "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
            },
            {
              "label": "Occasionally or sometimes (http://example.com/shr/core/cs/QualitativeFrequencyCS:sometimes)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
              "code": "sometimes",
              "display": "Occasionally or sometimes",
              "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
            },
            {
              "label": "Rarely (http://example.com/shr/core/cs/QualitativeFrequencyCS:rarely)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
              "code": "rarely",
              "display": "Rarely",
              "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
            },
            {
              "label": "Never (http://example.com/shr/core/cs/QualitativeFrequencyCS:never)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeFrequencyCS",
              "code": "never",
              "display": "Never",
              "url": "http://example.com/shr/core/cs/QualitativeFrequencyCS"
            }
          ]
        },
        {
          "label": "YesNoCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/YesNoCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Yes, or true (http://example.com/shr/core/cs/YesNoCS:yes)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/YesNoCS",
              "code": "yes",
              "display": "Yes, or true",
              "url": "http://example.com/shr/core/cs/YesNoCS"
            },
            {
              "label": "No, or false (http://example.com/shr/core/cs/YesNoCS:no)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/YesNoCS",
              "code": "no",
              "display": "No, or false",
              "url": "http://example.com/shr/core/cs/YesNoCS"
            }
          ]
        },
        {
          "label": "YesNoUnknownCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/YesNoUnknownCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Yes, or true (http://example.com/shr/core/cs/YesNoUnknownCS:yes)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/YesNoUnknownCS",
              "code": "yes",
              "display": "Yes, or true",
              "url": "http://example.com/shr/core/cs/YesNoUnknownCS"
            },
            {
              "label": "No, or false (http://example.com/shr/core/cs/YesNoUnknownCS:no)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/YesNoUnknownCS",
              "code": "no",
              "display": "No, or false",
              "url": "http://example.com/shr/core/cs/YesNoUnknownCS"
            },
            {
              "label": "Unknown (http://example.com/shr/core/cs/YesNoUnknownCS:unknown)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/YesNoUnknownCS",
              "code": "unknown",
              "display": "Unknown",
              "url": "http://example.com/shr/core/cs/YesNoUnknownCS"
            }
          ]
        },
        {
          "label": "QualitativeValueScaleCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Very high (http://example.com/shr/core/cs/QualitativeValueScaleCS:very_high)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
              "code": "very_high",
              "display": "Very high",
              "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
            },
            {
              "label": "High (http://example.com/shr/core/cs/QualitativeValueScaleCS:high)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
              "code": "high",
              "display": "High",
              "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
            },
            {
              "label": "Moderate/Intermediate or Borderline (http://example.com/shr/core/cs/QualitativeValueScaleCS:moderate)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
              "code": "moderate",
              "display": "Moderate/Intermediate or Borderline",
              "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
            },
            {
              "label": "Low (http://example.com/shr/core/cs/QualitativeValueScaleCS:low)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
              "code": "low",
              "display": "Low",
              "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
            },
            {
              "label": "Very low (http://example.com/shr/core/cs/QualitativeValueScaleCS:very_low)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeValueScaleCS",
              "code": "very_low",
              "display": "Very low",
              "url": "http://example.com/shr/core/cs/QualitativeValueScaleCS"
            }
          ]
        },
        {
          "label": "QualitativeLikelihoodCS",
          "namespace": "shr.core",
          "description": "The likelihood of an event or state, expressed qualitatively. Qualitative likelihoods are associated with judgments and assessments. Values are based on US Intelligence Community's standard language used to describe judgements of likelihood.",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "With certainty or near-complete certainty, an event that definitely has or almost certainly will happen (http://example.com/shr/core/cs/QualitativeLikelihoodCS:definitely)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
              "code": "definitely",
              "display": "With certainty or near-complete certainty, an event that definitely has or almost certainly will happen",
              "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
            },
            {
              "label": "Very likely, highly probable, e.g., an event with more than 80% but less than 100% likelihood (http://example.com/shr/core/cs/QualitativeLikelihoodCS:very_likely)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
              "code": "very_likely",
              "display": "Very likely, highly probable, e.g., an event with more than 80% but less than 100% likelihood",
              "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
            },
            {
              "label": "Likely or probable, e.g., an event with 60% to 80% likelihood (http://example.com/shr/core/cs/QualitativeLikelihoodCS:likely)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
              "code": "likely",
              "display": "Likely or probable, e.g., an event with 60% to 80% likelihood",
              "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
            },
            {
              "label": "Roughly equal chance or even odds of happening, between 40% and 60% probability (http://example.com/shr/core/cs/QualitativeLikelihoodCS:even_chance)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
              "code": "even_chance",
              "display": "Roughly equal chance or even odds of happening, between 40% and 60% probability",
              "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
            },
            {
              "label": "Not likely or improbable, e.g., an event with 20% to 40% likelihood (http://example.com/shr/core/cs/QualitativeLikelihoodCS:unlikely)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
              "code": "unlikely",
              "display": "Not likely or improbable, e.g., an event with 20% to 40% likelihood",
              "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
            },
            {
              "label": "Very unlikely, highly improbable, e.g., an event with less than 20% but non-zero likelihood (http://example.com/shr/core/cs/QualitativeLikelihoodCS:very_unlikely)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/QualitativeLikelihoodCS",
              "code": "very_unlikely",
              "display": "Very unlikely, highly improbable, e.g., an event with less than 20% but non-zero likelihood",
              "url": "http://example.com/shr/core/cs/QualitativeLikelihoodCS"
            }
          ]
        },
        {
          "label": "ThreePriorityCS",
          "namespace": "shr.core",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/ThreePriorityCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "The first or primary item or alterative in a preference list. (http://example.com/shr/core/cs/ThreePriorityCS:primary)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/ThreePriorityCS",
              "code": "primary",
              "display": "The first or primary item or alterative in a preference list.",
              "url": "http://example.com/shr/core/cs/ThreePriorityCS"
            },
            {
              "label": "The second or backup preference. (http://example.com/shr/core/cs/ThreePriorityCS:secondary)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/ThreePriorityCS",
              "code": "secondary",
              "display": "The second or backup preference.",
              "url": "http://example.com/shr/core/cs/ThreePriorityCS"
            },
            {
              "label": "An alternative to primary and secondard choices in a preference list. (http://example.com/shr/core/cs/ThreePriorityCS:third_or_lower)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/ThreePriorityCS",
              "code": "third_or_lower",
              "display": "An alternative to primary and secondard choices in a preference list.",
              "url": "http://example.com/shr/core/cs/ThreePriorityCS"
            }
          ]
        },
        {
          "label": "SettingCS",
          "namespace": "shr.core",
          "description": "What type of place is found at a given location. More than one descriptor may be applicable.",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/SettingCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "At or during work, in a workplace setting. (http://example.com/shr/core/cs/SettingCS:work)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "work",
              "display": "At or during work, in a workplace setting.",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "At home (http://example.com/shr/core/cs/SettingCS:home)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "home",
              "display": "At home",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "In a residential setting (http://example.com/shr/core/cs/SettingCS:residental)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "residental",
              "display": "In a residential setting",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A primary or secondary school (http://example.com/shr/core/cs/SettingCS:school)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "school",
              "display": "A primary or secondary school",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "In a parked or moving vehicle (http://example.com/shr/core/cs/SettingCS:vehicle)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "vehicle",
              "display": "In a parked or moving vehicle",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "An non-manufacturing, indoor business setting (http://example.com/shr/core/cs/SettingCS:office)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "office",
              "display": "An non-manufacturing, indoor business setting",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A manufacturing-oriented business setting (http://example.com/shr/core/cs/SettingCS:factory)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "factory",
              "display": "A manufacturing-oriented business setting",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A place of business (http://example.com/shr/core/cs/SettingCS:business)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "business",
              "display": "A place of business",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A setting where food is served (http://example.com/shr/core/cs/SettingCS:restaurant)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "restaurant",
              "display": "A setting where food is served",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A place where food is prepared (http://example.com/shr/core/cs/SettingCS:food_prep)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "food_prep",
              "display": "A place where food is prepared",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Workplace that is primarily outdoors (http://example.com/shr/core/cs/SettingCS:worksite)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "worksite",
              "display": "Workplace that is primarily outdoors",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A setting where manufacturing takes place (http://example.com/shr/core/cs/SettingCS:manufacturing)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "manufacturing",
              "display": "A setting where manufacturing takes place",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A building or residence that is owned (http://example.com/shr/core/cs/SettingCS:owned)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "owned",
              "display": "A building or residence that is owned",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A building or residence that is rented (http://example.com/shr/core/cs/SettingCS:rental)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "rental",
              "display": "A building or residence that is rented",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Shared (unassisted) living residence, such as a dormitory or fraternity (http://example.com/shr/core/cs/SettingCS:dorm)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "dorm",
              "display": "Shared (unassisted) living residence, such as a dormitory or fraternity",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Foster care group home (http://example.com/shr/core/cs/SettingCS:foster)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "foster",
              "display": "Foster care group home",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Assisted living or independent living facility (http://example.com/shr/core/cs/SettingCS:assisted)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "assisted",
              "display": "Assisted living or independent living facility",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Skilled nursing facility or other Long-Term Care (http://example.com/shr/core/cs/SettingCS:snf)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "snf",
              "display": "Skilled nursing facility or other Long-Term Care",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Homeless or other type of shelter (http://example.com/shr/core/cs/SettingCS:shelter)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "shelter",
              "display": "Homeless or other type of shelter",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Hotel or motel (http://example.com/shr/core/cs/SettingCS:hotel)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "hotel",
              "display": "Hotel or motel",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Permanent supportive housing for formerly homeless persons (such as SHP, S+C, or SRO Mod Rehab) (http://example.com/shr/core/cs/SettingCS:psh)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "psh",
              "display": "Permanent supportive housing for formerly homeless persons (such as SHP, S+C, or SRO Mod Rehab)",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Psychiatric hospital or other psychiatric facility (http://example.com/shr/core/cs/SettingCS:psych)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "psych",
              "display": "Psychiatric hospital or other psychiatric facility",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Substance abuse treatment facility or detox center (http://example.com/shr/core/cs/SettingCS:detox)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "detox",
              "display": "Substance abuse treatment facility or detox center",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Individual resides in a correctional facility, state hospital, jail, prison, youth authority facility, juvenile hall, boot camp or Boys Ranch. (http://example.com/shr/core/cs/SettingCS:prison)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "prison",
              "display": "Individual resides in a correctional facility, state hospital, jail, prison, youth authority facility, juvenile hall, boot camp or Boys Ranch.",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Transitional housing, residential provier program, or any type of halfway house (http://example.com/shr/core/cs/SettingCS:transition)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "transition",
              "display": "Transitional housing, residential provier program, or any type of halfway house",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A homeless camp, abandoned building, shantytown, bus/train/subway station/airport, or squatter area (http://example.com/shr/core/cs/SettingCS:squat)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "squat",
              "display": "A homeless camp, abandoned building, shantytown, bus/train/subway station/airport, or squatter area",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Outside of any shelter, e.g., on a street (http://example.com/shr/core/cs/SettingCS:outdoors)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "outdoors",
              "display": "Outside of any shelter, e.g., on a street",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Agricultural setting (http://example.com/shr/core/cs/SettingCS:agricultural)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "agricultural",
              "display": "Agricultural setting",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "A farm with livestock (http://example.com/shr/core/cs/SettingCS:farm)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "farm",
              "display": "A farm with livestock",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "On a battlefield (http://example.com/shr/core/cs/SettingCS:battlefield)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "battlefield",
              "display": "On a battlefield",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Deployed to a military camp or area (http://example.com/shr/core/cs/SettingCS:deployed)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "deployed",
              "display": "Deployed to a military camp or area",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "On a boat (http://example.com/shr/core/cs/SettingCS:ship)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "ship",
              "display": "On a boat",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "On an airplane (http://example.com/shr/core/cs/SettingCS:airplane)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "airplane",
              "display": "On an airplane",
              "url": "http://example.com/shr/core/cs/SettingCS"
            },
            {
              "label": "Aboard a submarine (http://example.com/shr/core/cs/SettingCS:submarine)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/SettingCS",
              "code": "submarine",
              "display": "Aboard a submarine",
              "url": "http://example.com/shr/core/cs/SettingCS"
            }
          ]
        },
        {
          "label": "PerformanceGradingScaleCS",
          "namespace": "shr.core",
          "description": "A simple performance grading scale. Also useful for grading quality.",
          "type": "CodeSystem",
          "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
          "grammarVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
          },
          "children": [
            {
              "label": "Excellent (http://example.com/shr/core/cs/PerformanceGradingScaleCS:excellent)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
              "code": "excellent",
              "display": "Excellent",
              "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
            },
            {
              "label": "Very good (http://example.com/shr/core/cs/PerformanceGradingScaleCS:very_good)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
              "code": "very_good",
              "display": "Very good",
              "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
            },
            {
              "label": "Good (http://example.com/shr/core/cs/PerformanceGradingScaleCS:good)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
              "code": "good",
              "display": "Good",
              "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
            },
            {
              "label": "Fair (http://example.com/shr/core/cs/PerformanceGradingScaleCS:fair)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
              "code": "fair",
              "display": "Fair",
              "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
            },
            {
              "label": "Poor (http://example.com/shr/core/cs/PerformanceGradingScaleCS:poor)",
              "type": "Concept",
              "system": "http://example.com/shr/core/cs/PerformanceGradingScaleCS",
              "code": "poor",
              "display": "Poor",
              "url": "http://example.com/shr/core/cs/PerformanceGradingScaleCS"
            }
          ]
        }
      ]
    }
  ]
}